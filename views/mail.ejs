<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Enhanced Email Form with Shopping</title>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary-color: #4a6bff;
            --primary-hover: #3a5bef;
            --text-color: #333;
            --text-light: #666;
            --bg-color: #f5f7fa;
            --card-bg: #ffffff;
            --border-color: #e0e0e0;
            --shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            --success-color: #4BB543;
            --error-color: #ff3333;
            --warning-color: #ff9800;
            --dark-bg: #121212;
            --dark-card: #1e1e1e;
            --dark-text: #e0e0e0;
            --dark-border: #333;
            --dark-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
        }

        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }

        body {
            font-family: 'Roboto', sans-serif;
            background-color: var(--bg-color);
            color: var(--text-color);
            display: flex;
            flex-direction: column;
            min-height: 100vh;
            margin: 0;
            padding: 0;
            transition: all 0.3s ease;
        }

        body.dark-mode {
            background-color: var(--dark-bg);
            color: var(--dark-text);
        }

        .container {
            display: flex;
            flex: 1;
            width: 100%;
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
            gap: 30px;
        }

        /* Header Styles */
        header {
            background-color: var(--primary-color);
            color: white;
            padding: 15px 0;
            box-shadow: var(--shadow);
            position: relative;
            z-index: 100;
        }

        .header-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
            width: 100%;
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
        }

        .logo {
            font-size: 24px;
            font-weight: 700;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .logo i {
            font-size: 28px;
        }

        .nav-links {
            display: flex;
            gap: 20px;
        }

        .nav-links a {
            color: white;
            text-decoration: none;
            font-weight: 500;
            padding: 5px 10px;
            border-radius: 4px;
            transition: all 0.3s ease;
        }

        .nav-links a:hover {
            background-color: rgba(255, 255, 255, 0.2);
        }

        .header-actions {
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .theme-toggle {
            background: none;
            border: none;
            color: white;
            font-size: 20px;
            cursor: pointer;
            padding: 5px;
            border-radius: 50%;
            transition: all 0.3s ease;
        }

        .theme-toggle:hover {
            background-color: rgba(255, 255, 255, 0.2);
        }

        .cart-icon {
            position: relative;
            color: white;
            font-size: 20px;
            cursor: pointer;
        }

        .cart-count {
            position: absolute;
            top: -8px;
            right: -8px;
            background-color: var(--error-color);
            color: white;
            border-radius: 50%;
            width: 18px;
            height: 18px;
            font-size: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        /* Main Content Styles */
        .main-content {
            flex: 1;
            display: flex;
            flex-direction: column;
            gap: 30px;
        }

        /* Email Form Styles */
        .email-section {
            background: var(--card-bg);
            border-radius: 10px;
            box-shadow: var(--shadow);
            padding: 30px;
            transition: all 0.3s ease;
        }

        body.dark-mode .email-section {
            background: var(--dark-card);
            box-shadow: var(--dark-shadow);
        }

        .section-title {
            font-size: 24px;
            margin-bottom: 20px;
            color: var(--primary-color);
            display: flex;
            align-items: center;
            gap: 10px;
        }

        form {
            display: flex;
            flex-direction: column;
            gap: 20px;
        }

        .form-row {
            display: flex;
            gap: 20px;
        }

        .form-group {
            flex: 1;
            position: relative;
        }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
            color: var(--text-color);
        }

        body.dark-mode .form-group label {
            color: var(--dark-text);
        }

        input, textarea, select {
            width: 100%;
            padding: 12px 15px;
            border: 1px solid var(--border-color);
            border-radius: 6px;
            font-size: 16px;
            transition: all 0.3s ease;
            background-color: var(--card-bg);
            color: var(--text-color);
        }

        body.dark-mode input,
        body.dark-mode textarea,
        body.dark-mode select {
            border-color: var(--dark-border);
            background-color: var(--dark-card);
            color: var(--dark-text);
        }

        input:focus, textarea:focus, select:focus {
            border-color: var(--primary-color);
            outline: none;
            box-shadow: 0 0 0 3px rgba(74, 107, 255, 0.2);
        }

        textarea {
            min-height: 200px;
            resize: vertical;
        }

        .char-count {
            font-size: 12px;
            color: var(--text-light);
            text-align: right;
            margin-top: -15px;
            margin-bottom: 5px;
        }

        body.dark-mode .char-count {
            color: #aaa;
        }

        .form-actions {
            display: flex;
            justify-content: flex-end;
            gap: 15px;
        }

        button {
            background-color: var(--primary-color);
            color: white;
            border: none;
            padding: 12px 24px;
            border-radius: 6px;
            font-size: 16px;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
        }

        button:hover {
            background-color: var(--primary-hover);
            transform: translateY(-2px);
        }

        button:active {
            transform: translateY(0);
        }

        button.secondary {
            background-color: transparent;
            color: var(--primary-color);
            border: 1px solid var(--primary-color);
        }

        body.dark-mode button.secondary {
            color: var(--dark-text);
            border-color: var(--dark-text);
        }

        button.secondary:hover {
            background-color: rgba(74, 107, 255, 0.1);
        }

        .success-message {
            background-color: var(--success-color);
            color: white;
            padding: 15px;
            border-radius: 6px;
            margin-bottom: 20px;
            display: none;
            animation: fadeIn 0.5s;
            align-items: center;
            gap: 10px;
        }

        .error-message {
            color: var(--error-color);
            font-size: 13px;
            margin-top: -15px;
            margin-bottom: 15px;
            display: none;
            align-items: center;
            gap: 5px;
        }

        /* Shopping Cart Sidebar */
        .sidebar {
            width: 350px;
            background: var(--card-bg);
            border-radius: 10px;
            box-shadow: var(--shadow);
            padding: 20px;
            transition: all 0.3s ease;
            position: sticky;
            top: 20px;
            height: fit-content;
        }

        body.dark-mode .sidebar {
            background: var(--dark-card);
            box-shadow: var(--dark-shadow);
        }

        .cart-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 1px solid var(--border-color);
        }

        body.dark-mode .cart-header {
            border-bottom-color: var(--dark-border);
        }

        .cart-title {
            font-size: 20px;
            font-weight: 500;
        }

        .cart-items {
            display: flex;
            flex-direction: column;
            gap: 15px;
            max-height: 400px;
            overflow-y: auto;
            padding-right: 5px;
        }

        .cart-item {
            display: flex;
            gap: 15px;
            padding: 10px;
            border-radius: 6px;
            background-color: rgba(74, 107, 255, 0.05);
            transition: all 0.3s ease;
        }

        body.dark-mode .cart-item {
            background-color: rgba(255, 255, 255, 0.05);
        }

        .cart-item-img {
            width: 60px;
            height: 60px;
            object-fit: cover;
            border-radius: 4px;
        }

        .cart-item-details {
            flex: 1;
        }

        .cart-item-name {
            font-weight: 500;
            margin-bottom: 5px;
        }

        .cart-item-price {
            color: var(--primary-color);
            font-weight: 500;
        }

        .cart-item-actions {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .quantity-control {
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .quantity-btn {
            width: 25px;
            height: 25px;
            border-radius: 50%;
            background-color: var(--primary-color);
            color: white;
            border: none;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .quantity-btn:hover {
            background-color: var(--primary-hover);
        }

        .quantity {
            min-width: 20px;
            text-align: center;
        }

        .remove-item {
            color: var(--error-color);
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .remove-item:hover {
            transform: scale(1.1);
        }

        .cart-summary {
            margin-top: 20px;
            padding-top: 15px;
            border-top: 1px solid var(--border-color);
        }

        body.dark-mode .cart-summary {
            border-top-color: var(--dark-border);
        }

        .summary-row {
            display: flex;
            justify-content: space-between;
            margin-bottom: 10px;
        }

        .total {
            font-weight: 700;
            font-size: 18px;
        }

        .checkout-btn {
            width: 100%;
            margin-top: 20px;
        }

        .empty-cart {
            text-align: center;
            padding: 30px 0;
            color: var(--text-light);
        }

        body.dark-mode .empty-cart {
            color: #aaa;
        }

        /* Product Grid */
        .products-section {
            margin-top: 30px;
        }

        .products-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }

        .product-card {
            background: var(--card-bg);
            border-radius: 8px;
            overflow: hidden;
            box-shadow: var(--shadow);
            transition: all 0.3s ease;
        }

        body.dark-mode .product-card {
            background: var(--dark-card);
            box-shadow: var(--dark-shadow);
        }

        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
        }

        body.dark-mode .product-card:hover {
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);
        }

        .product-img {
            width: 100%;
            height: 180px;
            object-fit: cover;
        }

        .product-info {
            padding: 15px;
        }

        .product-name {
            font-weight: 500;
            margin-bottom: 5px;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        .product-description {
            color: var(--text-light);
            font-size: 14px;
            margin-bottom: 10px;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }

        body.dark-mode .product-description {
            color: #aaa;
        }

        .product-price {
            font-weight: 700;
            color: var(--primary-color);
            margin-bottom: 15px;
        }

        .add-to-cart {
            width: 100%;
            padding: 8px;
            font-size: 14px;
        }

        /* Email Template Preview */
        .email-preview {
            background: var(--card-bg);
            border-radius: 10px;
            box-shadow: var(--shadow);
            padding: 30px;
            margin-top: 30px;
            transition: all 0.3s ease;
        }

        body.dark-mode .email-preview {
            background: var(--dark-card);
            box-shadow: var(--dark-shadow);
        }

        .preview-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .preview-toggle {
            background: none;
            border: none;
            color: var(--primary-color);
            cursor: pointer;
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .preview-content {
            border: 1px solid var(--border-color);
            border-radius: 6px;
            padding: 20px;
            background: white;
            color: #333;
            min-height: 300px;
        }

        body.dark-mode .preview-content {
            border-color: var(--dark-border);
        }

        .email-header {
            padding-bottom: 15px;
            margin-bottom: 15px;
            border-bottom: 1px solid #eee;
        }

        .email-subject {
            font-size: 18px;
            font-weight: 700;
            margin-bottom: 10px;
        }

        .email-meta {
            display: flex;
            gap: 15px;
            font-size: 14px;
            color: #666;
        }

        .email-body {
            line-height: 1.6;
        }

        .email-footer {
            margin-top: 20px;
            padding-top: 15px;
            border-top: 1px solid #eee;
            font-size: 14px;
            color: #666;
        }

        /* Responsive Styles */
        @media (max-width: 992px) {
            .container {
                flex-direction: column;
            }

            .sidebar {
                width: 100%;
                position: static;
            }
        }

        @media (max-width: 768px) {
            .form-row {
                flex-direction: column;
                gap: 15px;
            }

            .header-container {
                flex-direction: column;
                gap: 15px;
            }

            .nav-links {
                width: 100%;
                justify-content: center;
            }

            .header-actions {
                width: 100%;
                justify-content: center;
            }
        }

        /* Animations */
        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        @keyframes slideIn {
            from { transform: translateY(20px); opacity: 0; }
            to { transform: translateY(0); opacity: 1; }
        }

        /* Utility Classes */
        .hidden {
            display: none !important;
        }

        .mt-20 {
            margin-top: 20px;
        }

        .mb-20 {
            margin-bottom: 20px;
        }

        .text-center {
            text-align: center;
        }

        /* Rich Text Editor Styles */
        .toolbar {
            display: flex;
            flex-wrap: wrap;
            gap: 5px;
            margin-bottom: 10px;
            padding: 5px;
            border: 1px solid var(--border-color);
            border-radius: 4px;
        }

        body.dark-mode .toolbar {
            border-color: var(--dark-border);
        }

        .toolbar button {
            background: none;
            border: none;
            color: var(--text-color);
            cursor: pointer;
            padding: 5px 8px;
            border-radius: 3px;
            font-size: 14px;
            transition: all 0.2s ease;
        }

        body.dark-mode .toolbar button {
            color: var(--dark-text);
        }

        .toolbar button:hover {
            background-color: rgba(74, 107, 255, 0.1);
        }

        .toolbar select {
            padding: 5px;
            border-radius: 3px;
            border: 1px solid var(--border-color);
            background-color: var(--card-bg);
            color: var(--text-color);
        }

        body.dark-mode .toolbar select {
            border-color: var(--dark-border);
            background-color: var(--dark-card);
            color: var(--dark-text);
        }

        /* Signature Styles */
        .signature-container {
            margin-top: 20px;
        }

        .signature-preview {
            border: 1px dashed var(--border-color);
            border-radius: 4px;
            padding: 10px;
            margin-top: 10px;
            min-height: 80px;
        }

        body.dark-mode .signature-preview {
            border-color: var(--dark-border);
        }
    </style>
</head>
<body>
    <header>
        <div class="header-container">
            <div class="logo">
                <i class="fas fa-envelope"></i>
                <span>MailShop</span>
            </div>
            <nav class="nav-links">
                <a href="#"><i class="fas fa-home"></i> Home</a>
                <a href="#"><i class="fas fa-shopping-bag"></i> Shop</a>
                <a href="#"><i class="fas fa-envelope"></i> Contact</a>
                <a href="#"><i class="fas fa-info-circle"></i> About</a>
            </nav>
            <div class="header-actions">
                <button class="theme-toggle" id="themeToggle">
                    <i class="fas fa-moon"></i>
                </button>
                <div class="cart-icon" id="cartIcon">
                    <i class="fas fa-shopping-cart"></i>
                    <span class="cart-count" id="cartCount">0</span>
                </div>
            </div>
        </div>
    </header>

    <div class="container">
        <div class="main-content">
            <section class="email-section">
                <h2 class="section-title">
                    <i class="fas fa-paper-plane"></i>
                    Compose Email
                </h2>
                
                <form id="emailForm" action="/send-mail" method="POST">
                    <div class="success-message" id="successMessage">
                        <i class="fas fa-check-circle"></i> Email sent successfully!
                    </div>
                    
                    <div class="form-row">
                        <div class="form-group">
                            <label for="senderEmail">Your Email</label>
                            <input type="email" id="senderEmail" name="senderEmail" placeholder="your.email@example.com" required>
                            <div class="error-message" id="senderEmailError">
                                <i class="fas fa-exclamation-circle"></i> Please enter a valid email address
                            </div>
                        </div>
                        
                        <div class="form-group">
                            <label for="recipientEmail">Recipient Email</label>
                            <input type="email" id="recipientEmail" name="recipientEmail" placeholder="recipient@example.com" required>
                            <div class="error-message" id="recipientEmailError">
                                <i class="fas fa-exclamation-circle"></i> Please enter a valid email address
                            </div>
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <label for="subject">Subject</label>
                        <input type="text" id="subject" name="subject" placeholder="Email subject" required>
                    </div>
                    
                    <div class="form-group">
                        <label for="message">Message</label>
                        <div class="toolbar">
                            <button type="button" data-command="bold" title="Bold"><i class="fas fa-bold"></i></button>
                            <button type="button" data-command="italic" title="Italic"><i class="fas fa-italic"></i></button>
                            <button type="button" data-command="underline" title="Underline"><i class="fas fa-underline"></i></button>
                            <button type="button" data-command="insertUnorderedList" title="Bullet List"><i class="fas fa-list-ul"></i></button>
                            <button type="button" data-command="insertOrderedList" title="Numbered List"><i class="fas fa-list-ol"></i></button>
                            <select data-command="formatBlock" title="Paragraph Format">
                                <option value="p">Paragraph</option>
                                <option value="h1">Heading 1</option>
                                <option value="h2">Heading 2</option>
                                <option value="h3">Heading 3</option>
                            </select>
                            <button type="button" data-command="createLink" title="Insert Link"><i class="fas fa-link"></i></button>
                            <button type="button" data-command="insertImage" title="Insert Image"><i class="fas fa-image"></i></button>
                            <button type="button" data-command="undo" title="Undo"><i class="fas fa-undo"></i></button>
                            <button type="button" data-command="redo" title="Redo"><i class="fas fa-redo"></i></button>
                        </div>
                        <div id="message" contenteditable="true" class="rich-text-editor" style="min-height: 200px; border: 1px solid var(--border-color); padding: 15px; border-radius: 6px;"></div>
                        <div class="char-count"><span id="charCount">0</span> characters</div>
                    </div>
                    
                    <div class="form-group signature-container">
                        <label>
                            <input type="checkbox" id="includeSignature"> Include Signature
                        </label>
                        <div class="signature-preview" id="signaturePreview" contenteditable="true">
                            <p>Best regards,</p>
                            <p><strong>John Doe</strong></p>
                            <p>Marketing Director</p>
                            <p>MailShop Inc.</p>
                            <p>Phone: (123) 456-7890</p>
                        </div>
                    </div>
                    
                    <div class="form-actions">
                        <button type="button" class="secondary" id="saveDraftBtn">
                            <i class="fas fa-save"></i> Save Draft
                        </button>
                        <button type="submit" id="submitBtn">
                            <i class="fas fa-paper-plane"></i> Send Email
                        </button>
                    </div>
                </form>
            </section>
            
            <section class="products-section">
                <h2 class="section-title">
                    <i class="fas fa-shopping-bag"></i>
                    Featured Products
                </h2>
                
                <div class="products-grid" id="productsGrid">
                    <!-- Products will be added dynamically -->
                </div>
            </section>
            
            <section class="email-preview">
                <div class="preview-header">
                    <h2 class="section-title">
                        <i class="fas fa-eye"></i>
                        Email Preview
                    </h2>
                    <button class="preview-toggle" id="previewToggle">
                        <i class="fas fa-sync-alt"></i> Refresh
                    </button>
                </div>
                
                <div class="preview-content" id="previewContent">
                    <div class="email-header">
                        <div class="email-subject" id="previewSubject">Your Email Subject Here</div>
                        <div class="email-meta">
                            <span id="previewFrom">From: you@example.com</span>
                            <span id="previewTo">To: recipient@example.com</span>
                        </div>
                    </div>
                    <div class="email-body" id="previewBody">
                        <p>Your email content will appear here. This is a preview of how your email will look when received.</p>
                        <p>You can format the text using the toolbar above to create rich text emails with bold, italics, lists, and more.</p>
                    </div>
                    <div class="email-footer" id="previewFooter">
                        <p>This email was sent from MailShop Email Composer</p>
                    </div>
                </div>
            </section>
        </div>
        
        <aside class="sidebar">
            <div class="cart-header">
                <h3 class="cart-title">
                    <i class="fas fa-shopping-cart"></i>
                    Shopping Cart
                </h3>
                <span id="cartTotalItems">0 items</span>
            </div>
            
            <div class="cart-items" id="cartItems">
                <div class="empty-cart">
                    <i class="fas fa-shopping-basket" style="font-size: 40px; margin-bottom: 10px;"></i>
                    <p>Your cart is empty</p>
                    <p>Add some products from our shop!</p>
                </div>
            </div>
            
            <div class="cart-summary" id="cartSummary" style="display: none;">
                <div class="summary-row">
                    <span>Subtotal:</span>
                    <span id="cartSubtotal">$0.00</span>
                </div>
                <div class="summary-row">
                    <span>Shipping:</span>
                    <span id="cartShipping">$5.00</span>
                </div>
                <div class="summary-row total">
                    <span>Total:</span>
                    <span id="cartTotal">$5.00</span>
                </div>
                
                <button class="checkout-btn" id="checkoutBtn">
                    <i class="fas fa-credit-card"></i> Proceed to Checkout
                </button>
            </div>
        </aside>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Theme Toggle
            const themeToggle = document.getElementById('themeToggle');
            const body = document.body;
            
            // Check for saved theme preference or use preferred color scheme
            const savedTheme = localStorage.getItem('theme');
            const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
            
            if (savedTheme === 'dark' || (!savedTheme && prefersDark)) {
                body.classList.add('dark-mode');
                themeToggle.innerHTML = '<i class="fas fa-sun"></i>';
            }
            
            themeToggle.addEventListener('click', function() {
                body.classList.toggle('dark-mode');
                const isDark = body.classList.contains('dark-mode');
                localStorage.setItem('theme', isDark ? 'dark' : 'light');
                themeToggle.innerHTML = isDark ? '<i class="fas fa-sun"></i>' : '<i class="fas fa-moon"></i>';
            });
            
            // Rich Text Editor Functionality
            const messageEditor = document.getElementById('message');
            const toolbarButtons = document.querySelectorAll('.toolbar button[data-command]');
            const formatSelect = document.querySelector('.toolbar select[data-command]');
            
            toolbarButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const command = this.getAttribute('data-command');
                    let value = null;
                    
                    if (command === 'createLink' || command === 'insertImage') {
                        value = prompt(`Enter ${command === 'createLink' ? 'URL' : 'Image URL'}:`);
                        if (!value) return;
                    }
                    
                    document.execCommand(command, false, value);
                    messageEditor.focus();
                });
            });
            
            formatSelect.addEventListener('change', function() {
                document.execCommand('formatBlock', false, this.value);
                messageEditor.focus();
            });
            
            // Signature Toggle
            const includeSignature = document.getElementById('includeSignature');
            const signaturePreview = document.getElementById('signaturePreview');
            
            includeSignature.addEventListener('change', updatePreview);
            
            // Character Counter
            messageEditor.addEventListener('input', function() {
                document.getElementById('charCount').textContent = this.textContent.length;
                updatePreview();
            });
            
            // Form Validation
            function validateEmail(inputId, errorId) {
                const input = document.getElementById(inputId);
                const error = document.getElementById(errorId);
                const isValid = input.checkValidity();
                
                if (!isValid && input.value !== '') {
                    error.style.display = 'flex';
                    input.style.borderColor = 'var(--error-color)';
                } else {
                    error.style.display = 'none';
                    input.style.borderColor = 'var(--border-color)';
                }
                
                return isValid;
            }
            
            // Real-time validation
            document.getElementById('senderEmail').addEventListener('blur', function() {
                validateEmail('senderEmail', 'senderEmailError');
                updatePreview();
            });
            
            document.getElementById('recipientEmail').addEventListener('blur', function() {
                validateEmail('recipientEmail', 'recipientEmailError');
                updatePreview();
            });
            
            document.getElementById('subject').addEventListener('input', updatePreview);
            
            // Update Email Preview
            function updatePreview() {
                document.getElementById('previewSubject').textContent = 
                    document.getElementById('subject').value || 'Your Email Subject Here';
                
                document.getElementById('previewFrom').textContent = 
                    `From: ${document.getElementById('senderEmail').value || 'you@example.com'}`;
                
                document.getElementById('previewTo').textContent = 
                    `To: ${document.getElementById('recipientEmail').value || 'recipient@example.com'}`;
                
                const messageContent = messageEditor.innerHTML;
                const signatureContent = includeSignature.checked ? signaturePreview.innerHTML : '';
                
                document.getElementById('previewBody').innerHTML = 
                    messageContent || '<p>Your email content will appear here.</p>' + 
                    (signatureContent ? `<div style="margin-top: 20px;">${signatureContent}</div>` : '');
            }
            
            // Initialize preview
            updatePreview();
            
            // Preview refresh button
            document.getElementById('previewToggle').addEventListener('click', updatePreview);
            
            // Form submission
            const form = document.getElementById('emailForm');
            const submitBtn = document.getElementById('submitBtn');
            const successMessage = document.getElementById('successMessage');
            
            form.addEventListener('submit', function(e) {
                e.preventDefault();
                
                // Validate form
                const senderValid = validateEmail('senderEmail', 'senderEmailError');
                const recipientValid = validateEmail('recipientEmail', 'recipientEmailError');
                
                if (senderValid && recipientValid) {
                    submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Sending...';
                    submitBtn.disabled = true;
                    
                    // Simulate form submission
                    setTimeout(function() {
                        successMessage.style.display = 'flex';
                        submitBtn.innerHTML = '<i class="fas fa-paper-plane"></i> Send Email';
                        submitBtn.disabled = false;
                        
                        // Reset form after 3 seconds
                        setTimeout(function() {
                            form.reset();
                            messageEditor.innerHTML = '';
                            document.getElementById('charCount').textContent = '0';
                            successMessage.style.display = 'none';
                            updatePreview();
                        }, 3000);
                    }, 1500);
                }
            });
            
            // Save Draft button
            document.getElementById('saveDraftBtn').addEventListener('click', function() {
                const draft = {
                    senderEmail: document.getElementById('senderEmail').value,
                    recipientEmail: document.getElementById('recipientEmail').value,
                    subject: document.getElementById('subject').value,
                    message: messageEditor.innerHTML,
                    timestamp: new Date().toISOString()
                };
                
                localStorage.setItem('emailDraft', JSON.stringify(draft));
                
                // Show temporary notification
                const notification = document.createElement('div');
                notification.className = 'success-message';
                notification.style.position = 'fixed';
                notification.style.bottom = '20px';
                notification.style.right = '20px';
                notification.style.zIndex = '1000';
                notification.innerHTML = '<i class="fas fa-save"></i> Draft saved successfully!';
                document.body.appendChild(notification);
                
                setTimeout(() => {
                    notification.style.animation = 'fadeIn 0.5s reverse';
                    setTimeout(() => notification.remove(), 500);
                }, 3000);
            });
            
            // Load draft if exists
            const savedDraft = localStorage.getItem('emailDraft');
            if (savedDraft) {
                const draft = JSON.parse(savedDraft);
                document.getElementById('senderEmail').value = draft.senderEmail || '';
                document.getElementById('recipientEmail').value = draft.recipientEmail || '';
                document.getElementById('subject').value = draft.subject || '';
                messageEditor.innerHTML = draft.message || '';
                document.getElementById('charCount').textContent = messageEditor.textContent.length;
                updatePreview();
            }
            
            // Shopping Cart Functionality
            const cartItemsContainer = document.getElementById('cartItems');
            const cartSummary = document.getElementById('cartSummary');
            const emptyCart = document.querySelector('.empty-cart');
            const cartCount = document.getElementById('cartCount');
            const cartTotalItems = document.getElementById('cartTotalItems');
            const cartSubtotal = document.getElementById('cartSubtotal');
            const cartShipping = document.getElementById('cartShipping');
            const cartTotal = document.getElementById('cartTotal');
            
            let cart = JSON.parse(localStorage.getItem('cart')) || [];
            
            // Sample products data
            const products = [
                {
                    id: 1,
                    name: 'Wireless Headphones',
                    description: 'Premium noise-cancelling wireless headphones with 30-hour battery life.',
                    price: 199.99,
                    image: 'https://images.unsplash.com/photo-1505740420928-5e560c06d30e?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&h=350&q=80'
                },
                {
                    id: 2,
                    name: 'Smart Watch',
                    description: 'Fitness tracker with heart rate monitor and waterproof design.',
                    price: 159.99,
                    image: 'https://images.unsplash.com/photo-1523275335684-37898b6baf30?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&h=350&q=80'
                },
                {
                    id: 3,
                    name: 'Bluetooth Speaker',
                    description: 'Portable speaker with 20W output and 15-hour playtime.',
                    price: 89.99,
                    image: 'https://images.unsplash.com/photo-1572569511254-d8f925fe2cbb?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&h=350&q=80'
                },
                {
                    id: 4,
                    name: 'Laptop Backpack',
                    description: 'Ergonomic backpack with USB charging port and anti-theft design.',
                    price: 49.99,
                    image: 'https://images.unsplash.com/photo-1553062407-98eeb64c6a62?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&h=350&q=80'
                },
                {
                    id: 5,
                    name: 'Wireless Charger',
                    description: 'Fast-charging Qi-certified wireless charging pad.',
                    price: 29.99,
                    image: 'https://images.unsplash.com/photo-1587033411394-4b47bc129f5d?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&h=350&q=80'
                },
                {
                    id: 6,
                    name: 'External SSD',
                    description: '1TB portable SSD with USB 3.1 and 550MB/s transfer speeds.',
                    price: 129.99,
                    image: 'https://images.unsplash.com/photo-1591488320449-011701bb6704?ixlib=rb-1.2.1&auto=format&fit=crop&w=500&h=350&q=80'
                }
            ];
            
            // Render products
            const productsGrid = document.getElementById('productsGrid');
            
            products.forEach(product => {
                const productCard = document.createElement('div');
                productCard.className = 'product-card';
                productCard.innerHTML = `
                    <img src="${product.image}" alt="${product.name}" class="product-img">
                    <div class="product-info">
                        <h3 class="product-name">${product.name}</h3>
                        <p class="product-description">${product.description}</p>
                        <div class="product-price">$${product.price.toFixed(2)}</div>
                        <button class="add-to-cart" data-id="${product.id}">
                            <i class="fas fa-cart-plus"></i> Add to Cart
                        </button>
                    </div>
                `;
                productsGrid.appendChild(productCard);
            });
            
            // Add to cart functionality
            productsGrid.addEventListener('click', function(e) {
                if (e.target.classList.contains('add-to-cart') || e.target.closest('.add-to-cart')) {
                    const button = e.target.classList.contains('add-to-cart') ? 
                        e.target : e.target.closest('.add-to-cart');
                    const productId = parseInt(button.getAttribute('data-id'));
                    addToCart(productId);
                }
            });
            
            function addToCart(productId) {
                const product = products.find(p => p.id === productId);
                if (!product) return;
                
                const existingItem = cart.find(item => item.id === productId);
                
                if (existingItem) {
                    existingItem.quantity += 1;
                } else {
                    cart.push({
                        id: product.id,
                        name: product.name,
                        price: product.price,
                        image: product.image,
                        quantity: 1
                    });
                }
                
                updateCart();
                
                // Show add to cart animation
                const notification = document.createElement('div');
                notification.className = 'success-message';
                notification.style.position = 'fixed';
                notification.style.bottom = '20px';
                notification.style.right = '20px';
                notification.style.zIndex = '1000';
                notification.innerHTML = `<i class="fas fa-check-circle"></i> ${product.name} added to cart!`;
                document.body.appendChild(notification);
                
                setTimeout(() => {
                    notification.style.animation = 'fadeIn 0.5s reverse';
                    setTimeout(() => notification.remove(), 500);
                }, 2000);
            }
            
            function updateCart() {
                localStorage.setItem('cart', JSON.stringify(cart));
                renderCartItems();
                
                // Update cart count
                const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);
                cartCount.textContent = totalItems;
                cartTotalItems.textContent = `${totalItems} ${totalItems === 1 ? 'item' : 'items'}`;
                
                // Update cart summary
                const subtotal = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);
                const shipping = subtotal > 0 ? 5 : 0;
                const total = subtotal + shipping;
                
                cartSubtotal.textContent = `$${subtotal.toFixed(2)}`;
                cartShipping.textContent = `$${shipping.toFixed(2)}`;
                cartTotal.textContent = `$${total.toFixed(2)}`;
            }
            
            function renderCartItems() {
                if (cart.length === 0) {
                    emptyCart.style.display = 'block';
                    cartSummary.style.display = 'none';
                    cartItemsContainer.innerHTML = `
                        <div class="empty-cart">
                            <i class="fas fa-shopping-basket" style="font-size: 40px; margin-bottom: 10px;"></i>
                            <p>Your cart is empty</p>
                            <p>Add some products from our shop!</p>
                        </div>
                    `;
                    return;
                }
                
                emptyCart.style.display = 'none';
                cartSummary.style.display = 'block';
                
                cartItemsContainer.innerHTML = '';
                
                cart.forEach(item => {
                    const cartItem = document.createElement('div');
                    cartItem.className = 'cart-item';
                    cartItem.innerHTML = `
                        <img src="${item.image}" alt="${item.name}" class="cart-item-img">
                        <div class="cart-item-details">
                            <div class="cart-item-name">${item.name}</div>
                            <div class="cart-item-price">$${(item.price * item.quantity).toFixed(2)}</div>
                        </div>
                        <div class="cart-item-actions">
                            <div class="quantity-control">
                                <button class="quantity-btn minus" data-id="${item.id}">-</button>
                                <span class="quantity">${item.quantity}</span>
                                <button class="quantity-btn plus" data-id="${item.id}">+</button>
                            </div>
                            <div class="remove-item" data-id="${item.id}">
                                <i class="fas fa-trash"></i>
                            </div>
                        </div>
                    `;
                    cartItemsContainer.appendChild(cartItem);
                });
                
                // Add event listeners for quantity controls
                document.querySelectorAll('.quantity-btn').forEach(button => {
                    button.addEventListener('click', function() {
                        const productId = parseInt(this.getAttribute('data-id'));
                        const isPlus = this.classList.contains('plus');
                        const isMinus = this.classList.contains('minus');
                        
                        const itemIndex = cart.findIndex(item => item.id === productId);
                        
                        if (itemIndex !== -1) {
                            if (isPlus) {
                                cart[itemIndex].quantity += 1;
                            } else if (isMinus) {
                                if (cart[itemIndex].quantity > 1) {
                                    cart[itemIndex].quantity -= 1;
                                } else {
                                    cart.splice(itemIndex, 1);
                                }
                            }
                            
                            updateCart();
                        }
                    });
                });
                
                // Add event listeners for remove buttons
                document.querySelectorAll('.remove-item').forEach(button => {
                    button.addEventListener('click', function() {
                        const productId = parseInt(this.getAttribute('data-id'));
                        cart = cart.filter(item => item.id !== productId);
                        updateCart();
                    });
                });
            }
            
            // Checkout button
            document.getElementById('checkoutBtn').addEventListener('click', function() {
                if (cart.length === 0) return;
                
                // In a real app, this would redirect to a checkout page
                alert('Proceeding to checkout with ' + cart.reduce((sum, item) => sum + item.quantity, 0) + ' items');
            });
            
            // Cart icon click
            document.getElementById('cartIcon').addEventListener('click', function() {
                // Scroll to cart section
                document.querySelector('.sidebar').scrollIntoView({ behavior: 'smooth' });
            });
            
            // Initialize cart
            updateCart();
        });
    </script>
</body>
</html>
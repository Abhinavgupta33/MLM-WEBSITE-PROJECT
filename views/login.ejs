<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Alumni Portal | Login</title>
  
  <!-- Google Fonts -->
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  
  <style>
    :root {
      --primary: #4361ee;
      --primary-light: #4cc9f0;
      --primary-dark: #3a56d4;
      --primary-darker: #2f4bc2;
      --white: #ffffff;
      --gray: #6c757d;
      --light-gray: #e9ecef;
      --lighter-gray: #f8f9fa;
      --dark-gray: #343a40;
      --border-radius: 16px;
      --border-radius-sm: 12px;
      --box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
      --box-shadow-lg: 0 20px 50px rgba(0, 0, 0, 0.15);
      --glass-effect: rgba(255, 255, 255, 0.97);
      --glass-border: rgba(255, 255, 255, 0.3);
      --transition-base: all 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
      --transition-slow: all 0.8s cubic-bezier(0.175, 0.885, 0.32, 1.275);
      --text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    * {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }

    body {
      font-family: 'Poppins', sans-serif;
      background-color: var(--lighter-gray);
      display: flex;
      align-items: center;
      justify-content: center;
      min-height: 100vh;
      padding: 20px;
      overflow: hidden;
      position: relative;
      color: var(--dark-gray);
      line-height: 1.6;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
    }

    /* Cosmic Background Animation */
    .cosmic-bg {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: -3;
      background: linear-gradient(135deg, #e6f0ff 0%, #f0f5ff 50%, #e6ecf5 100%);
      overflow: hidden;
    }

    /* Animated Gradient Background */
    .gradient-bg {
      position: absolute;
      top: -50%;
      left: -50%;
      width: 200%;
      height: 200%;
      background: linear-gradient(
        45deg, 
        rgba(67, 97, 238, 0.08) 0%, 
        rgba(76, 201, 240, 0.12) 25%, 
        rgba(255, 255, 255, 0.08) 50%, 
        rgba(76, 201, 240, 0.12) 75%, 
        rgba(67, 97, 238, 0.08) 100%
      );
      background-size: 400% 400%;
      animation: gradientFlow 30s ease infinite;
      z-index: -2;
      opacity: 0.8;
      will-change: background-position;
    }

    @keyframes gradientFlow {
      0% {
        background-position: 0% 50%;
      }
      50% {
        background-position: 100% 50%;
      }
      100% {
        background-position: 0% 50%;
      }
    }

    /* Floating Particles - Optimized */
    .particles {
      position: fixed;
      width: 100%;
      height: 100%;
      z-index: -1;
      pointer-events: none;
      will-change: transform;
    }

    .particle {
      position: absolute;
      border-radius: 50%;
      filter: blur(1.5px);
      animation: floatParticle linear forwards;
      background: radial-gradient(circle, rgba(255,255,255,0.95) 0%, rgba(67, 97, 238, 0.4) 70%);
      will-change: transform, opacity;
      backface-visibility: hidden;
      transform: translateZ(0);
    }

    @keyframes floatParticle {
      0% {
        transform: translateY(0) translateX(0) rotate(0deg);
        opacity: 0.8;
      }
      100% {
        transform: translateY(-1200px) translateX(600px) rotate(720deg);
        opacity: 0;
      }
    }

    /* Floating Bubbles - Optimized */
    .bubbles {
      position: fixed;
      width: 100%;
      height: 100%;
      z-index: -1;
      overflow: hidden;
      pointer-events: none;
      will-change: transform;
    }

    .bubble {
      position: absolute;
      bottom: -100px;
      background: rgba(67, 97, 238, 0.12);
      border-radius: 50%;
      animation: rise linear forwards;
      box-shadow: inset 0 0 15px rgba(67, 97, 238, 0.25);
      will-change: transform;
      backface-visibility: hidden;
      transform: translateZ(0);
    }

    @keyframes rise {
      0% {
        transform: translateX(0) scale(0.8);
      }
      50% {
        transform: translateX(150px) scale(1);
      }
      100% {
        transform: translateY(-1300px) translateX(-300px) scale(0.8);
      }
    }

    /* Light Rays - Optimized */
    .light-rays {
      position: fixed;
      width: 100%;
      height: 100%;
      z-index: -1;
      overflow: hidden;
      pointer-events: none;
      will-change: transform;
    }

    .light-ray {
      position: absolute;
      width: 3px;
      height: 200%;
      background: linear-gradient(to bottom, transparent, rgba(67, 97, 238, 0.4), transparent);
      animation: rayAnimation linear infinite;
      transform-origin: top center;
      will-change: transform;
      backface-visibility: hidden;
      transform: translateZ(0);
    }

    @keyframes rayAnimation {
      0% {
        transform: rotate(0deg) translateY(-50%);
      }
      100% {
        transform: rotate(360deg) translateY(-50%);
      }
    }

    /* Starfield Background - Optimized */
    .starfield {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: -2;
      overflow: hidden;
      pointer-events: none;
    }

    .star {
      position: absolute;
      background-color: rgba(67, 97, 238, 0.6);
      border-radius: 50%;
      animation: twinkle var(--duration) infinite ease-in-out;
      will-change: opacity;
      backface-visibility: hidden;
      transform: translateZ(0);
    }

    @keyframes twinkle {
      0%, 100% { opacity: 0.3; }
      50% { opacity: 0.8; }
    }

    /* Aurora Effect - Optimized */
    .aurora {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: -2;
      overflow: hidden;
      pointer-events: none;
      will-change: transform;
    }

    .aurora-band {
      position: absolute;
      height: 250px;
      width: 250%;
      background: linear-gradient(90deg, 
        rgba(67, 97, 238, 0.08) 0%, 
        rgba(76, 201, 240, 0.15) 50%, 
        rgba(67, 97, 238, 0.08) 100%);
      border-radius: 50%;
      filter: blur(40px);
      animation: auroraFlow linear infinite;
      opacity: 0.6;
      will-change: transform;
      backface-visibility: hidden;
      transform: translateZ(0);
    }

    @keyframes auroraFlow {
      0% {
        transform: translateX(-50%);
      }
      100% {
        transform: translateX(0);
      }
    }

    /* Login Container */
    .login-container {
      max-width: 480px;
      width: 100%;
      animation: fadeIn 1s cubic-bezier(0.175, 0.885, 0.32, 1.275) both;
      perspective: 1200px;
      transform-style: preserve-3d;
      will-change: transform, opacity;
      backface-visibility: hidden;
    }

    .login-card {
      border-radius: var(--border-radius);
      box-shadow: var(--box-shadow-lg);
      background: var(--glass-effect);
      overflow: hidden;
      transition: var(--transition-slow);
      transform-style: preserve-3d;
      position: relative;
      backdrop-filter: blur(12px);
      -webkit-backdrop-filter: blur(12px);
      border: 1px solid var(--glass-border);
      will-change: transform, box-shadow;
      backface-visibility: hidden;
      transform: translateZ(0);
    }

    .login-card:hover {
      transform: translateY(-15px) rotateX(2deg) rotateY(2deg);
      box-shadow: 0 25px 60px rgba(0, 0, 0, 0.2);
    }

    .login-card::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: linear-gradient(
        135deg,
        rgba(255, 255, 255, 0.7) 0%,
        rgba(255, 255, 255, 0.4) 100%
      );
      z-index: -1;
      border-radius: var(--border-radius);
    }

    .login-header {
      background: linear-gradient(135deg, var(--primary), var(--primary-dark));
      color: var(--white);
      padding: 3rem;
      text-align: center;
      position: relative;
      overflow: hidden;
      clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
    }

    .login-header::before {
      content: '';
      position: absolute;
      top: -50%;
      left: -50%;
      width: 200%;
      height: 200%;
      background: linear-gradient(
        to bottom right,
        rgba(255, 255, 255, 0.5) 0%,
        rgba(255, 255, 255, 0) 60%
      );
      transform: rotate(30deg);
      animation: shine 8s infinite;
      will-change: transform;
      backface-visibility: hidden;
    }

    @keyframes shine {
      0% {
        transform: rotate(30deg) translate(-40%, -40%);
      }
      100% {
        transform: rotate(30deg) translate(40%, 40%);
      }
    }

    .login-header h2 {
      font-weight: 600;
      margin-bottom: 0.75rem;
      font-size: 2.25rem;
      position: relative;
      animation: textGlow 4s infinite alternate;
      text-shadow: 0 3px 15px rgba(0, 0, 0, 0.3);
      will-change: text-shadow;
      backface-visibility: hidden;
    }

    @keyframes textGlow {
      from {
        text-shadow: 0 0 15px rgba(255, 255, 255, 0.5);
      }
      to {
        text-shadow: 0 0 25px rgba(255, 255, 255, 0.9);
      }
    }

    .login-header p {
      font-weight: 300;
      opacity: 0.9;
      position: relative;
      font-size: 1.15rem;
      text-shadow: var(--text-shadow);
    }

    .login-body {
      padding: 3rem;
    }

    .form-group {
      margin-bottom: 2rem;
      position: relative;
    }

    .form-group label {
      display: block;
      margin-bottom: 1rem;
      font-weight: 500;
      color: var(--gray);
      transition: var(--transition-base);
      font-size: 1.05rem;
      will-change: transform, font-size, color;
      backface-visibility: hidden;
    }

    .form-control {
      width: 100%;
      height: 60px;
      border-radius: var(--border-radius-sm);
      border: 1px solid rgba(0, 0, 0, 0.12);
      padding: 0 22px;
      font-size: 1.05rem;
      transition: var(--transition-base);
      background: rgba(255, 255, 255, 0.9);
      box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.05);
      font-family: 'Poppins', sans-serif;
      will-change: transform, border-color, box-shadow, background;
      backface-visibility: hidden;
    }

    .form-control:focus {
      border-color: var(--primary-light);
      box-shadow: 0 0 0 4px rgba(67, 97, 238, 0.2);
      outline: none;
      transform: translateY(-5px);
      background: var(--white);
    }

    .form-control::placeholder {
      color: #adb5bd;
      opacity: 0.8;
    }

    .btn-login {
      background: linear-gradient(135deg, var(--primary), var(--primary-dark));
      color: white;
      border: none;
      height: 60px;
      border-radius: var(--border-radius-sm);
      width: 100%;
      font-weight: 600;
      font-size: 1.15rem;
      cursor: pointer;
      transition: var(--transition-base);
      margin-top: 1.5rem;
      position: relative;
      overflow: hidden;
      box-shadow: 0 8px 20px rgba(67, 97, 238, 0.3);
      text-transform: uppercase;
      letter-spacing: 1.5px;
      font-family: 'Poppins', sans-serif;
      will-change: transform, box-shadow, background;
      backface-visibility: hidden;
    }

    .btn-login::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(
        90deg,
        transparent,
        rgba(255, 255, 255, 0.5),
        transparent
      );
      transition: 0.8s;
      will-change: left;
      backface-visibility: hidden;
    }

    .btn-login:hover {
      background: linear-gradient(135deg, var(--primary-dark), var(--primary-darker));
      box-shadow: 0 12px 30px rgba(67, 97, 238, 0.5);
      transform: translateY(-5px);
    }

    .btn-login:active {
      transform: translateY(2px);
    }

    .btn-login:hover::before {
      left: 100%;
    }

    .signup-link {
      text-align: center;
      margin-top: 2.5rem;
      color: var(--gray);
      position: relative;
      font-size: 1rem;
    }

    .signup-link::before,
    .signup-link::after {
      content: '';
      position: absolute;
      top: 50%;
      width: 30%;
      height: 1px;
      background: linear-gradient(to right, transparent, rgba(0, 0, 0, 0.15), transparent);
    }

    .signup-link::before {
      left: 0;
    }

    .signup-link::after {
      right: 0;
    }

    .signup-link a {
      color: var(--primary);
      text-decoration: none;
      font-weight: 600;
      transition: var(--transition-base);
      position: relative;
      padding: 0 8px;
    }

    .signup-link a::after {
      content: '';
      position: absolute;
      bottom: -3px;
      left: 0;
      width: 0;
      height: 2px;
      background: var(--primary-dark);
      transition: width 0.5s ease;
      will-change: width;
      backface-visibility: hidden;
    }

    .signup-link a:hover {
      color: var(--primary-dark);
    }

    .signup-link a:hover::after {
      width: 100%;
    }

    /* Floating label effect */
    .form-group.focused label {
      transform: translateY(-30px);
      font-size: 0.9rem;
      color: var(--primary);
    }

    /* Ripple effect */
    .ripple {
      position: absolute;
      border-radius: 50%;
      background: rgba(255, 255, 255, 0.7);
      transform: scale(0);
      animation: ripple 0.8s linear;
      pointer-events: none;
      will-change: transform, opacity;
      backface-visibility: hidden;
    }

    @keyframes ripple {
      to {
        transform: scale(5);
        opacity: 0;
      }
    }

    /* Fade-in animation */
    @keyframes fadeIn {
      from {
        opacity: 0;
        transform: translateY(40px) rotateX(15deg);
      }
      to {
        opacity: 1;
        transform: translateY(0) rotateX(0);
      }
    }

    /* Corner decorations */
    .corner-decoration {
      position: absolute;
      width: 60px;
      height: 60px;
      border: 3px solid rgba(67, 97, 238, 0.15);
      border-radius: 8px;
      will-change: transform;
      backface-visibility: hidden;
    }

    .corner-decoration.top-left {
      top: 25px;
      left: 25px;
      border-right: none;
      border-bottom: none;
      animation: cornerFloat 10s infinite ease-in-out;
    }

    .corner-decoration.top-right {
      top: 25px;
      right: 25px;
      border-left: none;
      border-bottom: none;
      animation: cornerFloat 12s infinite ease-in-out;
    }

    .corner-decoration.bottom-left {
      bottom: 25px;
      left: 25px;
      border-right: none;
      border-top: none;
      animation: cornerFloat 15s infinite ease-in-out;
    }

    .corner-decoration.bottom-right {
      bottom: 25px;
      right: 25px;
      border-left: none;
      border-top: none;
      animation: cornerFloat 11s infinite ease-in-out;
    }

    @keyframes cornerFloat {
      0%, 100% {
        transform: translate(0, 0) rotate(0deg);
      }
      50% {
        transform: translate(8px, 8px) rotate(5deg);
      }
    }

    /* Form glow effect */
    .form-glow {
      position: absolute;
      width: 100%;
      height: 100%;
      top: 0;
      left: 0;
      background: radial-gradient(circle at center, rgba(67, 97, 238, 0.08) 0%, transparent 70%);
      z-index: -1;
      opacity: 0;
      transition: opacity 0.8s ease;
      will-change: opacity;
      backface-visibility: hidden;
    }

    .login-card:hover .form-glow {
      opacity: 0.6;
    }

    /* Responsive adjustments */
    @media (max-width: 768px) {
      .login-container {
        max-width: 90%;
      }
      
      .login-header {
        padding: 2.5rem;
        clip-path: polygon(0 0, 100% 0, 100% 90%, 0 100%);
      }
      
      .login-body {
        padding: 2.5rem;
      }

      .signup-link::before,
      .signup-link::after {
        width: 25%;
      }

      .form-control {
        height: 55px;
      }

      .btn-login {
        height: 55px;
      }
    }

    @media (max-width: 576px) {
      .login-header {
        padding: 2rem;
        clip-path: polygon(0 0, 100% 0, 100% 95%, 0 100%);
      }
      
      .login-body {
        padding: 2rem;
      }

      .signup-link::before,
      .signup-link::after {
        width: 20%;
      }

      .login-header h2 {
        font-size: 2rem;
      }

      .login-header p {
        font-size: 1rem;
      }

      .form-group label {
        font-size: 1rem;
        margin-bottom: 0.8rem;
      }

      .form-control {
        height: 50px;
        padding: 0 18px;
        font-size: 1rem;
      }

      .btn-login {
        height: 50px;
        font-size: 1.1rem;
      }
    }

    @media (max-width: 480px) {
      .login-header {
        padding: 1.8rem;
      }
      
      .login-body {
        padding: 1.8rem;
      }

      .signup-link::before,
      .signup-link::after {
        width: 15%;
      }

      .corner-decoration {
        width: 40px;
        height: 40px;
      }

      .corner-decoration.top-left {
        top: 15px;
        left: 15px;
      }

      .corner-decoration.top-right {
        top: 15px;
        right: 15px;
      }

      .corner-decoration.bottom-left {
        bottom: 15px;
        left: 15px;
      }

      .corner-decoration.bottom-right {
        bottom: 15px;
        right: 15px;
      }
    }

    /* Performance optimizations */
    @media (prefers-reduced-motion: reduce) {
      * {
        animation: none !important;
        transition: none !important;
      }
    }
  </style>
</head>
<body>
  <!-- Cosmic Background -->
  <div class="cosmic-bg">
    <div class="gradient-bg"></div>
  </div>

  <!-- Starfield Background -->
  <div class="starfield" id="starfield"></div>

  <!-- Aurora Effect -->
  <div class="aurora" id="aurora"></div>

  <!-- Floating Particles -->
  <div class="particles" id="particles"></div>

  <!-- Floating Bubbles -->
  <div class="bubbles" id="bubbles"></div>

  <!-- Light Rays -->
  <div class="light-rays" id="lightRays"></div>

  <div class="login-container">
    <div class="login-card">
      <!-- Corner Decorations -->
      <div class="corner-decoration top-left"></div>
      <div class="corner-decoration top-right"></div>
      <div class="corner-decoration bottom-left"></div>
      <div class="corner-decoration bottom-right"></div>
      
      <!-- Form Glow Effect -->
      <div class="form-glow"></div>

      <div class="login-header">
        <h2>Alumni Portal</h2>
        <p>Welcome back! Please sign in to continue</p>
      </div>

      <div class="login-body">
        <form id="loginForm" action="/loginrout" method="post">
          <div class="form-group">
            <label for="yourUsername">Email Address</label>
            <input type="email" id="yourUsername" name="email" class="form-control" required placeholder="your@email.com">
          </div>

          <div class="form-group">
            <label for="yourPassword">Password</label>
            <input type="password" id="yourPassword" name="pass" class="form-control" required placeholder="••••••••">
          </div>

          <button type="submit" class="btn-login">Sign In</button>

          <div class="signup-link">
            Not signed up? <a href="/signup_page">Create an account</a>
          </div>
        </form>
      </div>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Performance optimization - throttle animations
      let lastTime = 0;
      const throttle = (callback, limit) => {
        return function() {
          const now = new Date().getTime();
          if (now - lastTime >= limit) {
            callback();
            lastTime = now;
          }
        };
      };

      // Create starfield - optimized with fewer stars
      const starfield = document.getElementById('starfield');
      const starCount = 150;
      
      for (let i = 0; i < starCount; i++) {
        const star = document.createElement('div');
        star.classList.add('star');
        
        // Random properties
        const size = Math.random() * 3 + 0.5;
        const posX = Math.random() * 100;
        const posY = Math.random() * 100;
        const duration = Math.random() * 8 + 4;
        const delay = Math.random() * 8;
        
        star.style.width = `${size}px`;
        star.style.height = `${size}px`;
        star.style.left = `${posX}%`;
        star.style.top = `${posY}%`;
        star.style.animationDuration = `${duration}s`;
        star.style.animationDelay = `${delay}s`;
        star.style.setProperty('--duration', `${duration}s`);
        
        starfield.appendChild(star);
      }

      // Create aurora effect - optimized with fewer bands
      const aurora = document.getElementById('aurora');
      const auroraBandCount = 5;
      
      for (let i = 0; i < auroraBandCount; i++) {
        const band = document.createElement('div');
        band.classList.add('aurora-band');
        
        // Random properties
        const height = Math.random() * 300 + 150;
        const top = Math.random() * 100;
        const duration = Math.random() * 90 + 150;
        const delay = Math.random() * 60;
        const hue = 220 + Math.random() * 40 - 20;
        
        band.style.height = `${height}px`;
        band.style.top = `${top}%`;
        band.style.animationDuration = `${duration}s`;
        band.style.animationDelay = `${delay}s`;
        band.style.background = `linear-gradient(90deg, 
          hsla(${hue}, 80%, 60%, 0.1) 0%, 
          hsla(${hue}, 80%, 70%, 0.15) 50%, 
          hsla(${hue}, 80%, 60%, 0.1) 100%)`;
        
        aurora.appendChild(band);
      }

      // Create particles - optimized with fewer particles
      const particlesContainer = document.getElementById('particles');
      const particleCount = 40;
      
      for (let i = 0; i < particleCount; i++) {
        const particle = document.createElement('div');
        particle.classList.add('particle');
        
        // Random properties
        const size = Math.random() * 8 + 2;
        const posX = Math.random() * 100;
        const posY = Math.random() * 100 + 100;
        const duration = Math.random() * 40 + 15;
        const opacity = Math.random() * 0.8 + 0.2;
        
        particle.style.width = `${size}px`;
        particle.style.height = `${size}px`;
        particle.style.left = `${posX}%`;
        particle.style.top = `${posY}%`;
        particle.style.animationDuration = `${duration}s`;
        particle.style.opacity = opacity;
        
        // Random color variation
        const hue = 220 + Math.random() * 40 - 20;
        particle.style.background = `radial-gradient(circle, 
          rgba(255,255,255,0.95) 0%, 
          hsla(${hue}, 80%, 70%, ${opacity * 0.6}) 70%)`;
        
        particlesContainer.appendChild(particle);
        
        // Restart animation when complete
        particle.addEventListener('animationend', function() {
          this.style.top = `${Math.random() * 100 + 100}%`;
          this.style.left = `${Math.random() * 100}%`;
          this.style.animation = 'none';
          void this.offsetWidth; // Trigger reflow
          this.style.animation = `floatParticle ${duration}s linear forwards`;
        });
      }

      // Create bubbles - optimized with fewer bubbles
      const bubblesContainer = document.getElementById('bubbles');
      const bubbleCount = 15;
      
      for (let i = 0; i < bubbleCount; i++) {
        const bubble = document.createElement('div');
        bubble.classList.add('bubble');
        
        // Random properties
        const size = Math.random() * 150 + 50;
        const posX = Math.random() * 100;
        const duration = Math.random() * 40 + 25;
        
        bubble.style.width = `${size}px`;
        bubble.style.height = `${size}px`;
        bubble.style.left = `${posX}%`;
        bubble.style.animationDuration = `${duration}s`;
        
        // Random color variation
        bubble.style.background = `rgba(67, 97, 238, 0.15)`;
        bubble.style.boxShadow = `inset 0 0 15px rgba(67, 97, 238, 0.25)`;
        
        bubblesContainer.appendChild(bubble);
        
        // Restart animation when complete
        bubble.addEventListener('animationend', function() {
          this.style.left = `${Math.random() * 100}%`;
          this.style.animation = 'none';
          void this.offsetWidth; // Trigger reflow
          this.style.animation = `rise ${duration}s linear forwards`;
        });
      }

      // Create light rays - optimized with fewer rays
      const raysContainer = document.getElementById('lightRays');
      const rayCount = 8;
      
      for (let i = 0; i < rayCount; i++) {
        const ray = document.createElement('div');
        ray.classList.add('light-ray');
        
        // Random properties
        const posX = Math.random() * 100;
        const duration = Math.random() * 90 + 150;
        const opacity = Math.random() * 0.15 + 0.05;
        
        ray.style.left = `${posX}%`;
        ray.style.animationDuration = `${duration}s`;
        ray.style.opacity = opacity;
        
        raysContainer.appendChild(ray);
      }

      // Add ripple effect to login button
      const loginBtn = document.querySelector('.btn-login');
      if (loginBtn) {
        loginBtn.addEventListener('click', function(e) {
          const rect = this.getBoundingClientRect();
          const x = e.clientX - rect.left;
          const y = e.clientY - rect.top;
          
          const ripple = document.createElement('span');
          ripple.classList.add('ripple');
          ripple.style.left = `${x}px`;
          ripple.style.top = `${y}px`;
          
          this.appendChild(ripple);
          
          setTimeout(() => {
            ripple.remove();
          }, 1000);
        });
      }

      // Add focus effects to form inputs
      const inputs = document.querySelectorAll('.form-control');
      inputs.forEach(input => {
        const formGroup = input.closest('.form-group');
        
        input.addEventListener('focus', () => {
          formGroup.classList.add('focused');
        });
        
        input.addEventListener('blur', () => {
          if (!input.value) {
            formGroup.classList.remove('focused');
          }
        });
      });

      // Optimized mouse move parallax effect
      const handleMouseMove = throttle(function(e) {
        const x = e.clientX / window.innerWidth;
        const y = e.clientY / window.innerHeight;
        
        // Move gradient background
        const gradientBg = document.querySelector('.gradient-bg');
        gradientBg.style.transform = `translate(${x * 30 - 15}px, ${y * 30 - 15}px)`;
      }, 16); // ~60fps

      document.addEventListener('mousemove', handleMouseMove);

      // Performance monitoring
      const perfMonitor = document.createElement('div');
      perfMonitor.style.position = 'fixed';
      perfMonitor.style.bottom = '10px';
      perfMonitor.style.right = '10px';
      perfMonitor.style.color = 'white';
      perfMonitor.style.backgroundColor = 'rgba(0,0,0,0.5)';
      perfMonitor.style.padding = '5px';
      perfMonitor.style.borderRadius = '3px';
      perfMonitor.style.fontSize = '12px';
      perfMonitor.style.zIndex = '9999';
      document.body.appendChild(perfMonitor);

      let frameCount = 0;
      let lastFpsUpdate = 0;
      let fps = 0;

      function updateFPS() {
        frameCount++;
        const now = performance.now();
        if (now >= lastFpsUpdate + 1000) {
          fps = frameCount;
          frameCount = 0;
          lastFpsUpdate = now;
          perfMonitor.textContent = `FPS: ${fps}`;
        }
        requestAnimationFrame(updateFPS);
      }

      updateFPS();
    });
  </script>
</body>
</html>
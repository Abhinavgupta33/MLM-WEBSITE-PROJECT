<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Account Balance</title>
    <style>
        :root {
            --primary: #007bff;
            --success: #28a745;
            --gold: #FFD700;
            --silver: #C0C0C0;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f8f9fa;
            margin: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            color: #333;
            overflow: hidden;
            position: relative;
        }
        
        /* Security verification animation */
        .verification-beam {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 4px;
            background: linear-gradient(90deg, transparent, var(--primary), transparent);
            z-index: 100;
            animation: verifyScan 2s ease-in-out;
            opacity: 0;
        }
        
        @keyframes verifyScan {
            0% {
                top: 0;
                opacity: 0.8;
            }
            100% {
                top: 100%;
                opacity: 0;
            }
        }
        
        /* Currency note animation */
        .currency-note {
            position: absolute;
            width: 80px;
            height: 40px;
            background: linear-gradient(135deg, #f5f5f5, #e0e0e0);
            border-radius: 4px;
            display: flex;
            justify-content: center;
            align-items: center;
            font-weight: bold;
            color: #333;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
            z-index: 1;
            opacity: 0;
            transform: scale(0.5);
            animation: floatNote 8s linear infinite;
        }
        
        @keyframes floatNote {
            0% {
                opacity: 0;
                transform: translateY(0) rotate(0deg) scale(0.5);
            }
            10% {
                opacity: 1;
                transform: translateY(-20px) rotate(5deg) scale(1);
            }
            90% {
                opacity: 1;
            }
            100% {
                opacity: 0;
                transform: translateY(-500px) rotate(15deg) scale(1);
            }
        }
        
        .container {
            max-width: 420px;
            background-color: #fff;
            padding: 30px;
            border-radius: 12px;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
            text-align: center;
            animation: fadeIn 0.8s ease-in-out;
            position: relative;
            z-index: 10;
            border: 1px solid rgba(0, 0, 0, 0.05);
            overflow: hidden;
        }
        
        .container::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 5px;
            background: linear-gradient(90deg, var(--primary), var(--success));
            animation: borderGlow 3s infinite;
        }
        
        @keyframes borderGlow {
            0%, 100% {
                opacity: 0.8;
            }
            50% {
                opacity: 0.3;
            }
        }
        
        .container h2 {
            color: var(--primary);
            font-size: 26px;
            margin-bottom: 25px;
            position: relative;
            display: inline-block;
        }
        
        .container h2::after {
            content: '';
            position: absolute;
            bottom: -10px;
            left: 0;
            width: 100%;
            height: 3px;
            background: linear-gradient(90deg, var(--primary), transparent);
            border-radius: 3px;
        }
        
        .balance-container {
            position: relative;
            margin: 35px 0;
            perspective: 1000px;
        }
        
        .balance {
            font-size: 48px;
            font-weight: bold;
            color: var(--success);
            display: inline-block;
            transform-style: preserve-3d;
            animation: balanceFlip 1.5s ease-out;
        }
        
        @keyframes balanceFlip {
            0% {
                transform: rotateX(90deg);
                opacity: 0;
            }
            100% {
                transform: rotateX(0deg);
                opacity: 1;
            }
        }
        
        .currency-symbol {
            display: inline-block;
            animation: pulse 1.5s infinite alternate;
        }
        
        @keyframes pulse {
            0% {
                transform: scale(1);
                text-shadow: 0 0 0 rgba(40, 167, 69, 0.4);
            }
            100% {
                transform: scale(1.1);
                text-shadow: 0 0 10px rgba(40, 167, 69, 0.6);
            }
        }
        
        .balance-label {
            display: block;
            font-size: 14px;
            color: #6c757d;
            margin-top: 5px;
            letter-spacing: 1px;
            text-transform: uppercase;
        }
        
        .button-container {
            margin-top: 35px;
            position: relative;
        }
        
        .button {
            background: linear-gradient(135deg, var(--primary), #0069d9);
            color: white;
            padding: 14px 30px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-size: 18px;
            text-decoration: none;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(0, 123, 255, 0.3);
            position: relative;
            overflow: hidden;
            display: inline-block;
            font-weight: 500;
            letter-spacing: 0.5px;
        }
        
        .button:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 20px rgba(0, 123, 255, 0.4);
        }
        
        .button:active {
            transform: translateY(1px);
        }
        
        .button::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            transition: all 0.5s ease;
        }
        
        .button:hover::before {
            left: 100%;
        }
        
        .security-badge {
            display: inline-block;
            margin-top: 25px;
            font-size: 12px;
            color: #6c757d;
            animation: fadeIn 1s ease-in-out 1s both;
        }
        
        .security-badge i {
            color: var(--success);
            margin-right: 5px;
        }
        
        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(10px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        /* Digital particles animation */
        .digital-particle {
            position: absolute;
            color: rgba(0, 123, 255, 0.3);
            font-family: monospace;
            font-weight: bold;
            z-index: 0;
            user-select: none;
            animation: floatUp 10s linear infinite;
        }
        
        @keyframes floatUp {
            0% {
                transform: translateY(100vh) rotate(0deg);
                opacity: 0;
            }
            10% {
                opacity: 0.8;
            }
            90% {
                opacity: 0.8;
            }
            100% {
                transform: translateY(-100px) rotate(360deg);
                opacity: 0;
            }
        }
    </style>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
</head>
<body>
    <%- include("../utils/header")%> 
    <%- include("side")%>
    
    <div class="verification-beam"></div>
    
    <div class="container">
        <h2>Account Balance Verified</h2>
        
        <div class="balance-container">
            <div class="balance">
                <span class="currency-symbol">₹</span><%= data.amount %>
            </div>
            <span class="balance-label">Current Available Balance</span>
        </div>
        
        <div class="button-container">
            <a href="/dashboard" class="button">Return to Dashboard</a>
            <div class="security-badge">
                <i class="fas fa-shield-alt"></i> Secured Transaction
            </div>
        </div>
    </div>

  <%- include("../utils/footer"); %> 
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Create verification scan animation
            setTimeout(() => {
                const beam = document.querySelector('.verification-beam');
                beam.style.animation = 'verifyScan 2s ease-in-out';
                setTimeout(() => {
                    beam.remove();
                }, 2000);
            }, 500);
            
            // Create floating currency notes
            const denominations = ['₹10', '₹20', '₹50', '₹100', '₹200', '₹500'];
            const container = document.querySelector('.container');
            
            for (let i = 0; i < 8; i++) {
                setTimeout(() => {
                    const note = document.createElement('div');
                    note.className = 'currency-note';
                    note.textContent = denominations[Math.floor(Math.random() * denominations.length)];
                    
                    // Random position and animation delay
                    note.style.left = Math.random() * 80 + 10 + '%';
                    note.style.animationDelay = Math.random() * 5 + 's';
                    
                    // Random size variation
                    const size = 0.8 + Math.random() * 0.4;
                    note.style.transform = `scale(${size})`;
                    
                    // Random color based on denomination
                    if (note.textContent.includes('500')) {
                        note.style.background = 'linear-gradient(135deg, #f5f5f5, #FFD700)';
                        note.style.color = '#8B7500';
                    } else if (note.textContent.includes('200')) {
                        note.style.background = 'linear-gradient(135deg, #f5f5f5, #C0C0C0)';
                        note.style.color = '#696969';
                    }
                    
                    document.body.appendChild(note);
                    
                    // Remove note after animation completes
                    setTimeout(() => {
                        note.remove();
                    }, 8000);
                }, i * 600);
            }
            
            // Create digital particles (binary/dollar signs)
            for (let i = 0; i < 20; i++) {
                const particle = document.createElement('div');
                particle.className = 'digital-particle';
                particle.textContent = Math.random() > 0.5 ? '₹' : [0, 1][Math.floor(Math.random() * 2)];
                particle.style.left = Math.random() * 100 + 'vw';
                particle.style.fontSize = (10 + Math.random() * 10) + 'px';
                particle.style.animationDuration = (8 + Math.random() * 7) + 's';
                particle.style.animationDelay = Math.random() * 5 + 's';
                document.body.appendChild(particle);
            }
            
            // Balance counting animation (visual only, doesn't affect actual data)
            const balanceElement = document.querySelector('.balance');
            const amountText = "<%= data.amount %>".replace(/[^0-9.]/g, '');
            const amount = parseFloat(amountText);
            
            if (!isNaN(amount)) {
                const target = amount;
                let current = 0;
                const duration = 1500;
                const increment = target / (duration / 16);
                
                const animateBalance = () => {
                    current += increment;
                    if (current < target) {
                        balanceElement.innerHTML = `<span class="currency-symbol">₹</span>${Math.floor(current).toLocaleString()}`;
                        requestAnimationFrame(animateBalance);
                    } else {
                        balanceElement.innerHTML = `<span class="currency-symbol">₹</span>${target.toLocaleString()}`;
                    }
                };
                
                setTimeout(() => {
                    animateBalance();
                }, 500);
            }
        });
    </script>
</body>
</html>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Deposit Successful</title>
    <style>
        :root {
            --primary-color: #00796b;
            --primary-dark: #004d40;
            --primary-light: #b2dfdb;
            --success-color: #4caf50;
            --background: #e0f7fa;
        }

        body {
            font-family: 'Arial', sans-serif;
            background-color: var(--background);
            color: #333;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            overflow: hidden;
            position: relative;
        }

        /* Floating coins animation */
        .coin {
            position: absolute;
            border-radius: 50%;
            background: radial-gradient(circle at 30% 30%, #FFD700, #daa520);
            box-shadow: 0 0 10px rgba(218, 165, 32, 0.6);
            animation: float 15s linear infinite;
            z-index: 0;
            opacity: 0;
        }

        @keyframes float {
            0% {
                transform: translateY(110vh) translateX(0) rotate(0deg) scale(0.5);
                opacity: 0;
            }
            10% {
                opacity: 0.8;
            }
            90% {
                opacity: 0.8;
            }
            100% {
                transform: translateY(-10vh) translateX(100px) rotate(360deg) scale(1);
                opacity: 0;
            }
        }

        /* Success checkmark animation */
        .checkmark {
            width: 80px;
            height: 80px;
            border-radius: 50%;
            display: block;
            stroke-width: 5;
            stroke: var(--success-color);
            stroke-miterlimit: 10;
            margin: 20px auto;
            box-shadow: inset 0 0 0 rgba(76, 175, 80, 0.4);
            animation: fill 0.6s ease-in-out 0.6s forwards, scale 0.5s ease-in-out 0.9s both;
        }

        .checkmark__circle {
            stroke-dasharray: 166;
            stroke-dashoffset: 166;
            stroke-width: 5;
            stroke-miterlimit: 10;
            stroke: var(--success-color);
            fill: none;
            animation: stroke 0.6s cubic-bezier(0.65, 0, 0.45, 1) forwards;
        }

        .checkmark__check {
            transform-origin: 50% 50%;
            stroke-dasharray: 48;
            stroke-dashoffset: 48;
            animation: stroke 0.3s cubic-bezier(0.65, 0, 0.45, 1) 0.8s forwards;
        }

        @keyframes stroke {
            100% {
                stroke-dashoffset: 0;
            }
        }

        @keyframes scale {
            0%, 100% {
                transform: none;
            }
            50% {
                transform: scale3d(1.1, 1.1, 1);
            }
        }

        @keyframes fill {
            100% {
                box-shadow: inset 0 0 0 60px rgba(76, 175, 80, 0.1);
            }
        }

        /* Container animation */
        .container {
            text-align: center;
            background-color: #ffffff;
            padding: 40px;
            border-radius: 12px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
            width: 350px;
            transform: translateY(20px);
            opacity: 0;
            animation: fadeInUp 0.6s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards;
            position: relative;
            z-index: 1;
        }

        @keyframes fadeInUp {
            to {
                transform: translateY(0);
                opacity: 1;
            }
        }

        h1 {
            color: var(--primary-color);
            margin-bottom: 20px;
            font-size: 28px;
            animation: textGlow 2s ease-in-out infinite alternate;
        }

        @keyframes textGlow {
            from {
                text-shadow: 0 0 5px rgba(0, 121, 107, 0.3);
            }
            to {
                text-shadow: 0 0 10px rgba(0, 121, 107, 0.5);
            }
        }

        p {
            font-size: 16px;
            color: #555;
            margin-bottom: 30px;
            line-height: 1.6;
        }

        /* Button with ripple effect */
        .success-btn {
            padding: 14px 24px;
            background-color: var(--primary-color);
            color: #fff;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-size: 16px;
            font-weight: 600;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .success-btn:hover {
            background-color: var(--primary-dark);
            transform: translateY(-2px);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
        }

        .success-btn:active {
            transform: translateY(0);
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .success-btn .ripple {
            position: absolute;
            border-radius: 50%;
            background-color: rgba(255, 255, 255, 0.7);
            transform: scale(0);
            animation: ripple 0.6s linear;
            pointer-events: none;
        }

        @keyframes ripple {
            to {
                transform: scale(4);
                opacity: 0;
            }
        }

        /* Confetti animation */
        .confetti {
            position: absolute;
            width: 12px;
            height: 12px;
            opacity: 0;
            animation: confetti 3s ease-in-out forwards;
            z-index: 0;
        }

        @keyframes confetti {
            0% {
                transform: translateY(0) rotate(0deg);
                opacity: 1;
            }
            100% {
                transform: translateY(100vh) rotate(360deg);
                opacity: 0;
            }
        }
    </style>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
</head>
<body>
    <%- include("../utils/header")%> 
    <%- include("side")%>
    
    <!-- Background coins -->
    <div id="coinsBackground"></div>
    
    <div class="container">
        <svg class="checkmark" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 52 52">
            <circle class="checkmark__circle" cx="26" cy="26" r="25" fill="none"/>
            <path class="checkmark__check" fill="none" d="M14.1 27.2l7.1 7.2 16.7-16.8"/>
        </svg>
        
        <h1>Deposit Successful!</h1>
        <p>Your funds have been securely deposited to your account.</p>
        
        <button class="success-btn" id="dashboardBtn">
            <i class="fas fa-tachometer-alt" style="margin-right: 8px;"></i> Go to Dashboard
        </button>
    </div>
<%- include("../utils/footer"); %> 
  
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Create floating coins background
            const coinsBackground = document.getElementById('coinsBackground');
            
            for (let i = 0; i < 15; i++) {
                const coin = document.createElement('div');
                coin.className = 'coin';
                
                // Random size between 20-40px
                const size = Math.random() * 20 + 20;
                coin.style.width = `${size}px`;
                coin.style.height = `${size}px`;
                
                // Random position
                coin.style.left = `${Math.random() * 100}%`;
                
                // Random animation duration and delay
                coin.style.animationDuration = `${Math.random() * 15 + 10}s`;
                coin.style.animationDelay = `${Math.random() * 10}s`;
                
                // Make some coins silver
                if (Math.random() > 0.7) {
                    coin.style.background = 'radial-gradient(circle at 30% 30%, #C0C0C0, #a0a0a0)';
                    coin.style.boxShadow = '0 0 10px rgba(192, 192, 192, 0.6)';
                }
                
                coinsBackground.appendChild(coin);
            }
            
            // Create confetti effect
            function createConfetti() {
                const colors = ['#00796b', '#4caf50', '#FFD700', '#C0C0C0', '#b2dfdb'];
                
                for (let i = 0; i < 50; i++) {
                    const confetti = document.createElement('div');
                    confetti.className = 'confetti';
                    confetti.style.left = `${Math.random() * 100}%`;
                    confetti.style.top = '0';
                    confetti.style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];
                    
                    // Random size and shape
                    if (Math.random() > 0.5) {
                        // Coin-shaped confetti
                        confetti.style.width = `${Math.random() * 10 + 6}px`;
                        confetti.style.height = confetti.style.width;
                        confetti.style.borderRadius = '50%';
                    } else {
                        // Rectangle confetti
                        confetti.style.width = `${Math.random() * 15 + 5}px`;
                        confetti.style.height = `${Math.random() * 5 + 3}px`;
                        confetti.style.borderRadius = '2px';
                    }
                    
                    confetti.style.animationDuration = `${Math.random() * 2 + 1}s`;
                    confetti.style.animationDelay = `${Math.random() * 0.5}s`;
                    
                    document.body.appendChild(confetti);
                    
                    setTimeout(() => {
                        confetti.remove();
                    }, 3000);
                }
            }
            
            // Create confetti on page load
            setTimeout(createConfetti, 500);
            
            // Add ripple effect to button
            const dashboardBtn = document.getElementById('dashboardBtn');
            
            dashboardBtn.addEventListener('click', function(e) {
                // Create ripple effect
                const rect = this.getBoundingClientRect();
                const x = e.clientX - rect.left;
                const y = e.clientY - rect.top;
                
                const ripple = document.createElement('span');
                ripple.className = 'ripple';
                ripple.style.left = `${x}px`;
                ripple.style.top = `${y}px`;
                this.appendChild(ripple);
                
                setTimeout(() => {
                    ripple.remove();
                    window.location.href = '/dashboard';
                }, 600);
            });
        });
    </script>
</body>
</html>
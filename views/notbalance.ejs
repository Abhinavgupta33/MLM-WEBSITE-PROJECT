<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Insufficient Balance</title>
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <style>
    :root {
      --error-color: #ff5252;
      --error-light: #ffebee;
      --primary-color: #4a6bff;
      --primary-hover: #3a5bef;
      --success-color: #28a745;
      --success-hover: #218838;
      --text-dark: #2f3542;
      --text-medium: #555;
      --light-bg: #f8f9fa;
    }
    
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }
    
    body {
      font-family: 'Poppins', sans-serif;
      margin: 0;
      padding: 0;
      display: flex;
      justify-content: center;
      align-items: center;
      min-height: 100vh;
      background-color: var(--light-bg);
      position: relative;
      overflow: hidden;
      perspective: 1000px;
    }
    
    /* Floating Money Elements - Enhanced */
    .money-element {
      position: absolute;
      opacity: 0;
      z-index: 0;
      animation: floatMoney 18s cubic-bezier(0.4, 0, 0.2, 1) infinite;
      -webkit-animation: floatMoney 18s cubic-bezier(0.4, 0, 0.2, 1) infinite;
      color: var(--error-color);
      filter: drop-shadow(0 4px 12px rgba(0,0,0,0.15));
      pointer-events: none;
      font-size: 0;
      will-change: transform, opacity;
    }
    
    @keyframes floatMoney {
      0% {
        transform: translateY(120vh) rotate(0deg) scale(0.3) rotateX(0);
        opacity: 0;
      }
      10% {
        opacity: 0.2;
      }
      50% {
        opacity: 0.25;
        transform: translateY(40vh) rotate(180deg) scale(1.2) rotateX(20deg);
      }
      90% {
        opacity: 0.1;
      }
      100% {
        transform: translateY(-30vh) rotate(360deg) scale(0.4) rotateX(0);
        opacity: 0;
      }
    }
    
    /* Enhanced Error Wave */
    .error-wave {
      position: absolute;
      width: 200%;
      height: 120px;
      background: linear-gradient(90deg, rgba(255,82,82,0.03), rgba(255,82,82,0.08), rgba(255,82,82,0.03));
      border-radius: 50% 50% 0 0;
      animation: wave 12s infinite ease-in-out;
      -webkit-animation: wave 12s infinite ease-in-out;
      z-index: 0;
      bottom: 0;
      left: 0;
      transform-origin: bottom center;
      will-change: transform;
    }
    
    .error-wave:nth-child(2) {
      height: 80px;
      animation-delay: -3s;
      -webkit-animation-delay: -3s;
      opacity: 0.6;
      bottom: 10px;
    }
    
    @keyframes wave {
      0%, 100% {
        transform: translateX(-50%) scaleY(1) scaleX(1.2);
      }
      25% {
        transform: translateX(-40%) scaleY(0.8) scaleX(1.1);
      }
      50% {
        transform: translateX(-60%) scaleY(1.1) scaleX(1.3);
      }
      75% {
        transform: translateX(-30%) scaleY(0.9) scaleX(1);
      }
    }
    
    /* Premium Container Animation */
    .insufficient-container {
      background: #ffffff;
      padding: 40px;
      border-radius: 16px;
      box-shadow: 0 25px 60px rgba(0, 0, 0, 0.15);
      text-align: center;
      width: 90%;
      max-width: 450px;
      position: relative;
      z-index: 1;
      transform: translateY(30px) rotateX(10deg);
      opacity: 0;
      animation: cardEntrance 1s cubic-bezier(0.2, 0.8, 0.2, 1) 0.2s forwards;
      -webkit-animation: cardEntrance 1s cubic-bezier(0.2, 0.8, 0.2, 1) 0.2s forwards;
      border-top: 5px solid var(--error-color);
      transform-style: preserve-3d;
      will-change: transform, opacity;
      overflow: hidden;
    }
    
    .insufficient-container::after {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      height: 5px;
      background: linear-gradient(90deg, var(--error-color), #ff867f, var(--error-color));
      animation: borderFlow 4s linear infinite;
      -webkit-animation: borderFlow 4s linear infinite;
      background-size: 200% auto;
    }
    
    @keyframes borderFlow {
      0% {
        background-position: 0% center;
      }
      100% {
        background-position: 200% center;
      }
    }
    
    @keyframes cardEntrance {
      0% {
        opacity: 0;
        transform: translateY(30px) rotateX(10deg) scale(0.95);
      }
      80% {
        transform: translateY(0) rotateX(0) scale(1.02);
      }
      100% {
        opacity: 1;
        transform: translateY(0) rotateX(0) scale(1);
      }
    }
    
    /* Premium Error Icon Animation */
    .error-icon {
      width: 100px;
      height: 100px;
      margin: 0 auto 25px;
      display: flex;
      align-items: center;
      justify-content: center;
      background: linear-gradient(135deg, rgba(255,82,82,0.1), rgba(255,134,127,0.15));
      border-radius: 50%;
      animation: pulse 2.5s infinite ease-in-out, float 4s infinite ease-in-out;
      -webkit-animation: pulse 2.5s infinite ease-in-out, float 4s infinite ease-in-out;
      position: relative;
      will-change: transform, box-shadow;
      transform-style: preserve-3d;
    }
    
    @keyframes pulse {
      0%, 100% {
        transform: scale(1) translateY(0);
        box-shadow: 0 5px 15px rgba(255, 82, 82, 0.2);
      }
      50% {
        transform: scale(1.1) translateY(-5px);
        box-shadow: 0 15px 30px rgba(255, 82, 82, 0.3);
      }
    }
    
    @keyframes float {
      0%, 100% {
        transform: translateY(0);
      }
      50% {
        transform: translateY(-8px);
      }
    }
    
    .error-icon i {
      font-size: 50px;
      color: var(--error-color);
      animation: shake 1s cubic-bezier(0.4, 0, 0.2, 1) both, iconGlow 2s infinite alternate;
      -webkit-animation: shake 1s cubic-bezier(0.4, 0, 0.2, 1) both, iconGlow 2s infinite alternate;
      will-change: transform, filter;
    }
    
    @keyframes shake {
      0%, 100% { transform: rotate(0deg) scale(1); }
      10%, 30%, 50%, 70%, 90% { transform: rotate(-8deg) scale(1.1); }
      20%, 40%, 60%, 80% { transform: rotate(8deg) scale(1.1); }
    }
    
    @keyframes iconGlow {
      0% {
        filter: drop-shadow(0 0 5px rgba(255, 82, 82, 0));
      }
      100% {
        filter: drop-shadow(0 0 15px rgba(255, 82, 82, 0.4));
      }
    }
    
    /* Text Animations with Enhanced Effects */
    .insufficient-container h1 {
      color: var(--error-color);
      font-size: 30px;
      margin-bottom: 20px;
      font-weight: 700;
      opacity: 0;
      transform: translateY(20px);
      animation: fadeInUp 0.8s cubic-bezier(0.2, 0.8, 0.2, 1) 0.4s forwards, textGlow 3s infinite alternate;
      -webkit-animation: fadeInUp 0.8s cubic-bezier(0.2, 0.8, 0.2, 1) 0.4s forwards, textGlow 3s infinite alternate;
      background: linear-gradient(45deg, var(--error-color), #ff867f);
      -webkit-background-clip: text;
      background-clip: text;
      -webkit-text-fill-color: transparent;
      will-change: transform, opacity;
    }
    
    @keyframes textGlow {
      0% {
        text-shadow: 0 0 10px rgba(255, 82, 82, 0);
      }
      100% {
        text-shadow: 0 0 20px rgba(255, 82, 82, 0.3);
      }
    }
    
    .insufficient-container p {
      color: var(--text-medium);
      font-size: 17px;
      margin-bottom: 30px;
      line-height: 1.7;
      opacity: 0;
      transform: translateY(20px);
      animation: fadeInUp 0.8s cubic-bezier(0.2, 0.8, 0.2, 1) 0.6s forwards;
      -webkit-animation: fadeInUp 0.8s cubic-bezier(0.2, 0.8, 0.2, 1) 0.6s forwards;
      will-change: transform, opacity;
    }
    
    /* Premium Button Animations */
    .action-buttons {
      display: flex;
      justify-content: center;
      gap: 20px;
      flex-wrap: wrap;
      opacity: 0;
      transform: translateY(20px);
      animation: fadeInUp 0.8s cubic-bezier(0.2, 0.8, 0.2, 1) 0.8s forwards;
      -webkit-animation: fadeInUp 0.8s cubic-bezier(0.2, 0.8, 0.2, 1) 0.8s forwards;
      will-change: transform, opacity;
    }
    
    .btn {
      padding: 14px 28px;
      border-radius: 10px;
      font-size: 16px;
      cursor: pointer;
      font-weight: 600;
      transition: all 0.4s cubic-bezier(0.2, 0.8, 0.2, 1);
      -webkit-transition: all 0.4s cubic-bezier(0.2, 0.8, 0.2, 1);
      display: inline-flex;
      align-items: center;
      justify-content: center;
      min-width: 160px;
      position: relative;
      overflow: hidden;
      transform-style: preserve-3d;
      will-change: transform, box-shadow;
    }
    
    .btn::before {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(rgba(255,255,255,0.2), transparent);
      transform: translateY(-100%);
      transition: transform 0.4s cubic-bezier(0.2, 0.8, 0.2, 1);
    }
    
    .btn:hover::before {
      transform: translateY(0);
    }
    
    .btn i {
      margin-right: 10px;
      font-size: 18px;
      transition: transform 0.3s ease;
    }
    
    .btn:hover i {
      transform: scale(1.1);
    }
    
    .btn-back {
      background-color: white;
      color: var(--primary-color);
      border: 2px solid var(--primary-color);
      box-shadow: 0 5px 15px rgba(74, 107, 255, 0.1);
    }
    
    .btn-back:hover {
      background-color: rgba(74, 107, 255, 0.05);
      transform: translateY(-5px) scale(1.03);
      box-shadow: 0 12px 25px rgba(74, 107, 255, 0.2);
    }
    
    .btn-deposit {
      background: linear-gradient(135deg, var(--success-color), #34ce57);
      color: white;
      border: none;
      box-shadow: 0 5px 20px rgba(40, 167, 69, 0.3);
    }
    
    .btn-deposit:hover {
      background: linear-gradient(135deg, var(--success-hover), #2eae50);
      transform: translateY(-5px) scale(1.03);
      box-shadow: 0 15px 30px rgba(40, 167, 69, 0.4);
    }
    
    /* Responsive Design */
    @media (max-width: 480px) {
      .insufficient-container {
        padding: 30px 20px;
      }
      
      .error-icon {
        width: 80px;
        height: 80px;
      }
      
      .error-icon i {
        font-size: 40px;
      }
      
      .insufficient-container h1 {
        font-size: 26px;
      }
      
      .insufficient-container p {
        font-size: 15px;
      }
      
      .action-buttons {
        flex-direction: column;
        gap: 12px;
      }
      
      .btn {
        width: 100%;
        padding: 12px 24px;
      }
    }
    
    /* Keyframes */
    @keyframes fadeInUp {
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }
  </style>
</head>
<body>
    <%- include("../utils/header")%> 
    <%- include("side")%>
    
  <!-- Background elements will be added by JS -->
  <div class="error-wave"></div>
  <div class="error-wave"></div>
  
  <div class="insufficient-container">
    <div class="error-icon">
      <i class="fas fa-exclamation-circle"></i>
    </div>
    <h1>Insufficient Balance</h1>
    <p>We couldn't complete your transaction due to insufficient funds. Please deposit more money or try a smaller amount to proceed with your payment.</p>
    
    <div class="action-buttons">
      <button class="btn btn-back" onclick="goBack()">
        <i class="fas fa-arrow-left"></i> Go Back
      </button>
      <button class="btn btn-deposit" onclick="depositFunds()">
        <i class="fas fa-money-bill-wave"></i> Deposit Funds
      </button>
    </div>
  </div>

  <script>
    // Create floating money elements with enhanced effects
    function createMoneyElements() {
      const icons = ['fa-money-bill-wave', 'fa-coins', 'fa-wallet', 'fa-credit-card', 'fa-piggy-bank'];
      const colors = ['#ff5252', '#d32f2f', '#ff867f', '#ff8a80', '#ff6b6b'];
      
      for (let i = 0; i < 15; i++) {
        const element = document.createElement('div');
        element.className = 'money-element';
        element.innerHTML = `<i class="fas ${icons[i % icons.length]}"></i>`;
        
        // Random properties with more variation
        const left = Math.random() * 120 - 10;
        const delay = Math.random() * 20;
        const duration = 15 + Math.random() * 15;
        const size = 25 + Math.random() * 45;
        const rotation = Math.random() * 360;
        
        // Apply styles
        element.style.left = `${left}%`;
        element.style.top = `${120 + (Math.random() * 20)}%`;
        element.style.animationDelay = `${delay}s`;
        element.style.animationDuration = `${duration}s`;
        element.style.color = colors[i % colors.length];
        element.style.fontSize = `${size}px`;
        element.style.transform = `rotate(${rotation}deg)`;
        
        document.body.appendChild(element);
      }
    }
    
    // Initialize when DOM is loaded
    document.addEventListener('DOMContentLoaded', function() {
      createMoneyElements();
      
      // Enhanced button hover effects
      const buttons = document.querySelectorAll('.btn');
      buttons.forEach(button => {
        button.addEventListener('mouseenter', function() {
          this.style.transform = this.classList.contains('btn-back') ? 
            'translateY(-5px) scale(1.03)' : 
            'translateY(-5px) scale(1.03)';
        });
        button.addEventListener('mouseleave', function() {
          this.style.transform = 'translateY(0) scale(1)';
        });
        
        // Add ripple effect
        button.addEventListener('click', function(e) {
          const x = e.clientX - e.target.getBoundingClientRect().left;
          const y = e.clientY - e.target.getBoundingClientRect().top;
          const ripple = document.createElement('span');
          
          ripple.style.left = `${x}px`;
          ripple.style.top = `${y}px`;
          ripple.classList.add('ripple-effect');
          
          this.appendChild(ripple);
          
          setTimeout(() => {
            ripple.remove();
          }, 1000);
        });
      });
      
      // Add style for ripple effect
      const style = document.createElement('style');
      style.textContent = `
        .ripple-effect {
          position: absolute;
          border-radius: 50%;
          background: rgba(255,255,255,0.4);
          transform: scale(0);
          animation: ripple 0.6s linear;
          pointer-events: none;
        }
        
        @keyframes ripple {
          to {
            transform: scale(4);
            opacity: 0;
          }
        }
      `;
      document.head.appendChild(style);
    });
    
    function goBack() {
      // Add animation before redirecting
      document.querySelector('.insufficient-container').style.animation = 
        'cardEntrance 0.6s cubic-bezier(0.2, 0.8, 0.2, 1) reverse forwards';
      setTimeout(() => {
        window.history.back();
      }, 500);
    }

    function depositFunds() {
      // Add animation before redirecting
      document.querySelector('.insufficient-container').style.animation = 
        'cardEntrance 0.6s cubic-bezier(0.2, 0.8, 0.2, 1) reverse forwards';
      setTimeout(() => {
        window.location.href = '/deposit';
      }, 500);
    }
  </script>
</body>
</html>
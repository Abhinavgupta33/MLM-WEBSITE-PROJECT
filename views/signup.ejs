<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Alumni Portal | Sign Up</title>
  
  <!-- Google Fonts -->
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <!-- Font Awesome -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  
  <style>
    :root {
      --primary: #4361ee;
      --primary-light: #4cc9f0;
      --primary-dark: #3a56d4;
      --secondary: #7209b7;
      --accent: #f72585;
      --white: #ffffff;
      --light-gray: #f8f9fa;
      --lighter-gray: #e9ecef;
      --text-gray: #6c757d;
      --dark-gray: #343a40;
      --border-radius: 16px;
      --border-radius-sm: 8px;
      --box-shadow: 0 15px 40px rgba(0, 0, 0, 0.12);
      --box-shadow-lg: 0 25px 60px rgba(0, 0, 0, 0.15);
      --transition: all 0.4s cubic-bezier(0.25, 1, 0.5, 1);
      --transition-fast: all 0.2s ease-out;
    }

    * {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }

    body {
      font-family: 'Poppins', sans-serif;
      display: flex;
      align-items: center;
      justify-content: center;
      min-height: 100vh;
      padding: 20px;
      position: relative;
      overflow: hidden;
      color: var(--dark-gray);
      background: linear-gradient(135deg, #0f0c29, #302b63, #24243e);
    }

    /* Animated Gradient Background */
    .gradient-bg {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: -3;
      background: linear-gradient(-45deg, #0f0c29, #302b63, #24243e, #3a56d4);
      background-size: 400% 400%;
      animation: gradient-shift 15s ease infinite;
    }

    @keyframes gradient-shift {
      0% { background-position: 0% 50%; }
      50% { background-position: 100% 50%; }
      100% { background-position: 0% 50%; }
    }

    /* Floating Bubbles Background */
    .bubbles {
      position: absolute;
      width: 100%;
      height: 100%;
      z-index: -2;
      overflow: hidden;
      top: 0;
      left: 0;
    }

    .bubble {
      position: absolute;
      bottom: -100px;
      background: rgba(255, 255, 255, 0.1);
      border-radius: 50%;
      opacity: 0.5;
      animation: bubble-float linear infinite;
      filter: blur(2px);
    }

    @keyframes bubble-float {
      0% {
        transform: translateY(0) rotate(0deg);
        opacity: 0;
      }
      10% {
        opacity: 0.5;
      }
      100% {
        transform: translateY(-100vh) rotate(720deg);
        opacity: 0;
      }
    }

    /* Floating Particles with 3D effect */
    .particles {
      position: absolute;
      width: 100%;
      height: 100%;
      z-index: -1;
    }

    .particle {
      position: absolute;
      border-radius: 50%;
      background: radial-gradient(circle, var(--primary-light) 0%, transparent 70%);
      filter: blur(1px);
      opacity: 0;
      animation: particle-float linear infinite;
      transform-style: preserve-3d;
    }

    @keyframes particle-float {
      0% {
        transform: translate3d(0, 0, 0) scale(0.5) rotate(0deg);
        opacity: 0;
      }
      10% {
        opacity: 0.8;
      }
      100% {
        transform: translate3d(var(--tx, 200px), var(--ty, 200px), var(--tz, 100px)) scale(1.8) rotate(360deg);
        opacity: 0;
      }
    }

    /* Floating Card with 3D Tilt Effect */
    .signup-container {
      max-width: 640px;
      width: 100%;
      perspective: 2000px;
      animation: card-enter 1.2s cubic-bezier(0.22, 1, 0.36, 1) both;
    }

    @keyframes card-enter {
      0% {
        opacity: 0;
        transform: translateY(80px) rotateX(10deg) scale(0.95);
      }
      100% {
        opacity: 1;
        transform: translateY(0) rotateX(0) scale(1);
      }
    }

    .signup-card {
      border-radius: var(--border-radius);
      box-shadow: var(--box-shadow-lg);
      background: rgba(255, 255, 255, 0.95);
      backdrop-filter: blur(10px);
      overflow: hidden;
      transition: transform 0.8s cubic-bezier(0.175, 0.885, 0.32, 1.275), box-shadow 0.8s ease;
      border: 1px solid rgba(255, 255, 255, 0.2);
      transform-style: preserve-3d;
      will-change: transform;
      position: relative;
      backface-visibility: hidden;
    }

    /* 3D Tilt Effect */
    .signup-card:hover {
      transform: translateY(-10px) rotateX(1deg) rotateY(1deg);
      box-shadow: 0 30px 70px rgba(0, 0, 0, 0.3);
    }

    /* Header with Parallax Wave Animation */
    .signup-header {
      background: linear-gradient(135deg, var(--primary), var(--secondary));
      color: var(--white);
      padding: 3rem;
      text-align: center;
      position: relative;
      overflow: hidden;
      z-index: 1;
    }

    .signup-header::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 200%;
      height: 100%;
      background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1440 320"><path fill="rgba(255,255,255,0.15)" d="M0,192L48,197.3C96,203,192,213,288,229.3C384,245,480,267,576,250.7C672,235,768,181,864,181.3C960,181,1056,235,1152,234.7C1248,235,1344,181,1392,154.7L1440,128L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z"></path></svg>');
      background-size: 50% 100%;
      background-position: bottom;
      animation: wave 15s linear infinite;
      z-index: -1;
      will-change: transform;
    }

    @keyframes wave {
      0% { transform: translateX(0); }
      100% { transform: translateX(-50%); }
    }

    .signup-header h2 {
      font-weight: 600;
      margin-bottom: 0.5rem;
      font-size: 2.2rem;
      position: relative;
      animation: text-pop 1s cubic-bezier(0.22, 1, 0.36, 1) both;
      text-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    @keyframes text-pop {
      0% {
        opacity: 0;
        transform: translateY(30px) scale(0.8);
        text-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
      }
      100% {
        opacity: 1;
        transform: translateY(0) scale(1);
        text-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
      }
    }

    .signup-header p {
      font-weight: 300;
      opacity: 0.9;
      position: relative;
      font-size: 1.1rem;
      animation: fade-in 1s 0.3s cubic-bezier(0.22, 1, 0.36, 1) both;
    }

    @keyframes fade-in {
      0% { opacity: 0; }
      100% { opacity: 1; }
    }

    /* Enhanced Form Animations */
    .signup-body {
      padding: 3rem;
    }

    .form-row {
      display: flex;
      gap: 1.5rem;
      margin-bottom: 1.5rem;
    }

    .form-group {
      flex: 1;
      position: relative;
      animation: form-group-enter 1s cubic-bezier(0.22, 1, 0.36, 1) both;
      transform-origin: center bottom;
    }

    @keyframes form-group-enter {
      0% {
        opacity: 0;
        transform: translateY(40px) scale(0.95);
      }
      100% {
        opacity: 1;
        transform: translateY(0) scale(1);
      }
    }

    /* Stagger animations for each form group */
    .form-group:nth-child(1) { animation-delay: 0.4s; }
    .form-group:nth-child(2) { animation-delay: 0.5s; }
    .form-group:nth-child(3) { animation-delay: 0.6s; }
    .form-group:nth-child(4) { animation-delay: 0.7s; }
    .form-group:nth-child(5) { animation-delay: 0.8s; }
    .form-group:nth-child(6) { animation-delay: 0.9s; }

    .form-group label {
      display: block;
      margin-bottom: 0.5rem;
      font-weight: 500;
      color: var(--text-gray);
      transition: var(--transition-fast);
      transform-origin: left center;
    }

    .form-group:focus-within label {
      color: var(--primary);
      transform: translateY(-2px);
    }

    .input-container {
      position: relative;
      transition: var(--transition);
      transform-style: preserve-3d;
    }

    .input-container:hover {
      transform: translateY(-3px) translateZ(10px);
    }

    .form-control {
      width: 100%;
      height: 52px;
      border-radius: var(--border-radius-sm);
      border: 2px solid var(--lighter-gray);
      padding: 0 18px;
      font-size: 1rem;
      transition: var(--transition-fast);
      background: rgba(255, 255, 255, 0.8);
      font-family: 'Poppins', sans-serif;
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.03);
    }

    .form-control:focus {
      border-color: var(--primary);
      box-shadow: 0 0 0 4px rgba(67, 97, 238, 0.15);
      outline: none;
      background: var(--white);
      transform: translateZ(10px);
    }

    /* Floating Label Animation */
    .floating-label {
      position: absolute;
      top: 50%;
      left: 18px;
      transform: translateY(-50%);
      color: var(--text-gray);
      pointer-events: none;
      transition: all 0.3s ease;
      background: rgba(255, 255, 255, 0.8);
      padding: 0 5px;
      border-radius: 4px;
    }

    .form-control:focus + .floating-label,
    .form-control:not(:placeholder-shown) + .floating-label {
      top: 0;
      transform: translateY(-50%) scale(0.9);
      color: var(--primary);
      background: var(--white);
    }

    textarea.form-control {
      height: 120px;
      padding: 15px;
      resize: vertical;
    }

    select.form-control {
      appearance: none;
      background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='%236c757d' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6 9 12 15 18 9'%3e%3c/polyline%3e%3c/svg%3e");
      background-repeat: no-repeat;
      background-position: right 15px center;
      background-size: 1rem;
    }

    /* Enhanced Button with Morph Animation */
    .btn-signup {
      background: linear-gradient(135deg, var(--primary), var(--secondary));
      color: white;
      border: none;
      height: 58px;
      border-radius: var(--border-radius-sm);
      width: 100%;
      font-weight: 600;
      font-size: 1.1rem;
      cursor: pointer;
      transition: all 0.6s cubic-bezier(0.22, 1, 0.36, 1);
      margin-top: 1.5rem;
      position: relative;
      overflow: hidden;
      animation: fade-in 1s 1s both;
      box-shadow: 0 10px 25px rgba(67, 97, 238, 0.3);
      transform-style: preserve-3d;
      will-change: transform;
    }

    .btn-signup:hover {
      background: linear-gradient(135deg, var(--primary-dark), var(--secondary));
      box-shadow: 0 15px 35px rgba(67, 97, 238, 0.4);
      transform: translateY(-5px) translateZ(10px);
    }

    .btn-signup:active {
      transform: translateY(0) scale(0.98);
    }

    /* Button Liquid Effect */
    .btn-signup::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4), transparent);
      transform: translateX(-100%);
      transition: transform 0.6s ease;
      z-index: 1;
    }

    .btn-signup:hover::before {
      transform: translateX(100%);
    }

    /* Button Ripple Effect */
    .btn-signup::after {
      content: '';
      position: absolute;
      top: 50%;
      left: 50%;
      width: 5px;
      height: 5px;
      background: rgba(255, 255, 255, 0.6);
      opacity: 0;
      border-radius: 100%;
      transform: scale(1, 1) translate(-50%);
      transform-origin: 50% 50%;
    }

    .btn-signup:focus:not(:active)::after {
      animation: ripple 1s ease-out;
    }

    @keyframes ripple {
      0% { transform: scale(0, 0); opacity: 0.6; }
      20% { transform: scale(25, 25); opacity: 0.3; }
      100% { transform: scale(40, 40); opacity: 0; }
    }

    .btn-content {
      position: relative;
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 12px;
      z-index: 2;
    }

    /* Enhanced Link Animation */
    .login-link {
      text-align: center;
      margin-top: 2rem;
      color: var(--text-gray);
      animation: fade-in 1s 1.1s both;
    }

    .login-link a {
      color: var(--primary);
      text-decoration: none;
      font-weight: 500;
      transition: var(--transition-fast);
      position: relative;
      display: inline-block;
    }

    .login-link a::after {
      content: '';
      position: absolute;
      bottom: -2px;
      left: 0;
      width: 0;
      height: 2px;
      background: var(--primary-dark);
      transition: var(--transition-fast);
      border-radius: 2px;
    }

    .login-link a:hover::after {
      width: 100%;
    }

    /* Input Validation States */
    .form-group.success .form-control {
      border-color: #4BB543;
    }

    .form-group.error .form-control {
      border-color: #ff3860;
    }

    .form-group .error-message {
      color: #ff3860;
      font-size: 0.8rem;
      margin-top: 0.5rem;
      display: none;
    }

    .form-group.error .error-message {
      display: block;
      animation: shake 0.5s cubic-bezier(.36,.07,.19,.97) both;
    }

    @keyframes shake {
      0%, 100% { transform: translateX(0); }
      10%, 30%, 50%, 70%, 90% { transform: translateX(-5px); }
      20%, 40%, 60%, 80% { transform: translateX(5px); }
    }

    /* Confetti Animation */
    .confetti {
      position: absolute;
      width: 10px;
      height: 10px;
      background-color: var(--primary);
      opacity: 0;
      z-index: 10;
      animation: confetti-fall 3s ease-in-out forwards;
    }

    @keyframes confetti-fall {
      0% {
        transform: translateY(-100px) rotate(0deg);
        opacity: 1;
      }
      100% {
        transform: translateY(1000px) rotate(720deg);
        opacity: 0;
      }
    }

    /* Glowing Border Effect */
    .glow-border {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      border-radius: var(--border-radius);
      box-shadow: 0 0 20px rgba(67, 97, 238, 0.3);
      opacity: 0;
      transition: opacity 0.5s ease;
      pointer-events: none;
    }

    .signup-card:hover .glow-border {
      opacity: 1;
      animation: glow-pulse 2s infinite alternate;
    }

    @keyframes glow-pulse {
      0% { box-shadow: 0 0 20px rgba(67, 97, 238, 0.3); }
      100% { box-shadow: 0 0 30px rgba(67, 97, 238, 0.5); }
    }

    /* Responsive Design */
    @media (max-width: 768px) {
      .form-row {
        flex-direction: column;
        gap: 1rem;
      }
      
      .signup-container {
        max-width: 100%;
      }
      
      .signup-header {
        padding: 2.5rem;
      }
      
      .signup-body {
        padding: 2.5rem;
      }
    }

    @media (max-width: 480px) {
      .signup-header {
        padding: 2rem;
      }
      
      .signup-body {
        padding: 2rem;
      }
      
      .signup-header h2 {
        font-size: 1.8rem;
      }
    }
  </style>
</head>
<body>
  <!-- Animated Background Elements -->
  <div class="gradient-bg"></div>
  <div class="bubbles" id="bubbles"></div>
  <div class="particles" id="particles"></div>
  
  <div class="signup-container">
    <div class="signup-card">
      <div class="glow-border"></div>
      <div class="signup-header">
        <h2><i class="fas fa-graduation-cap"></i> Alumni Portal</h2>
        <p>Join our growing alumni community</p>
      </div>

      <div class="signup-body">
        <form id="signupForm" action="/signup" method="post">
          <div class="form-row">
            <div class="form-group">
              <label for="yourName">Your Name</label>
              <div class="input-container">
                <input type="text" id="yourName" name="Name" class="form-control" required placeholder="John Doe">
                <span class="floating-label">Your Name</span>
              </div>
              <div class="error-message">Please enter your full name</div>
            </div>
            <div class="form-group">
              <label for="fatherName">Father's Name</label>
              <div class="input-container">
                <input type="text" id="fatherName" name="FatherName" class="form-control" required placeholder="Father's Name">
                <span class="floating-label">Father's Name</span>
              </div>
              <div class="error-message">Please enter father's name</div>
            </div>
          </div>

          <div class="form-row">
            <div class="form-group">
              <label for="mobileNo">Mobile Number</label>
              <div class="input-container">
                <input type="tel" id="mobileNo" name="MobileNo" class="form-control" required placeholder="+91 9876543210">
                <span class="floating-label">Mobile Number</span>
              </div>
              <div class="error-message">Please enter a valid mobile number</div>
            </div>
            <div class="form-group">
              <label for="dob">Date of Birth</label>
              <div class="input-container">
                <input type="date" id="dob" name="Dob" class="form-control" required>
                <span class="floating-label">Date of Birth</span>
              </div>
              <div class="error-message">Please select your date of birth</div>
            </div>
          </div>

          <div class="form-row">
            <div class="form-group">
              <label for="email">Email Address</label>
              <div class="input-container">
                <input type="email" id="email" name="Email" class="form-control" required placeholder="your@email.com">
                <span class="floating-label">Email Address</span>
              </div>
              <div class="error-message">Please enter a valid email address</div>
            </div>
            <div class="form-group">
              <label for="gender">Gender</label>
              <div class="input-container">
                <select id="gender" name="Gender" class="form-control" required>
                  <option value="" disabled selected>Select Gender</option>
                  <option value="Male">Male</option>
                  <option value="Female">Female</option>
                  <option value="Other">Other</option>
                </select>
                <span class="floating-label">Gender</span>
              </div>
              <div class="error-message">Please select your gender</div>
            </div>
          </div>

          <div class="form-group">
            <label for="address">Residential Address</label>
            <div class="input-container">
              <textarea id="address" name="ResidentialAddress" class="form-control" rows="3" required placeholder="Your complete address"></textarea>
              <span class="floating-label">Residential Address</span>
            </div>
            <div class="error-message">Please enter your address</div>
          </div>

          <div class="form-row">
            <div class="form-group">
              <label for="password">Password</label>
              <div class="input-container">
                <input type="password" id="password" name="Password" class="form-control" required placeholder="••••••••">
                <span class="floating-label">Password</span>
              </div>
              <div class="error-message">Password must be at least 8 characters</div>
            </div>
            <div class="form-group">
              <label for="amount">Amount</label>
              <div class="input-container">
                <input type="number" id="amount" name="Amount" class="form-control" required placeholder="0.00">
                <span class="floating-label">Amount</span>
              </div>
              <div class="error-message">Please enter a valid amount</div>
            </div>
          </div>

          <button type="submit" class="btn-signup">
            <span class="btn-content">
              <i class="fas fa-user-plus"></i> Create Account
            </span>
          </button>

          <div class="login-link">
            Already have an account? <a href="/">Sign in</a>
          </div>
        </form>
      </div>
    </div>
  </div>

  <script>
    // Create floating bubbles background
    function createBubbles() {
      const bubblesContainer = document.getElementById('bubbles');
      const colors = ['rgba(76, 201, 240, 0.3)', 'rgba(114, 9, 183, 0.3)', 'rgba(247, 37, 133, 0.3)'];
      
      for (let i = 0; i < 20; i++) {
        const bubble = document.createElement('div');
        bubble.className = 'bubble';
        
        // Random properties
        const size = Math.random() * 100 + 50;
        const left = Math.random() * 100;
        const duration = Math.random() * 20 + 10;
        const delay = Math.random() * 15;
        const color = colors[Math.floor(Math.random() * colors.length)];
        
        bubble.style.width = `${size}px`;
        bubble.style.height = `${size}px`;
        bubble.style.left = `${left}%`;
        bubble.style.backgroundColor = color;
        bubble.style.animationDuration = `${duration}s`;
        bubble.style.animationDelay = `${delay}s`;
        
        bubblesContainer.appendChild(bubble);
      }
    }

    // Create enhanced floating particles with 3D effect
    function createParticles() {
      const particlesContainer = document.getElementById('particles');
      const colors = ['#4361ee', '#4cc9f0', '#7209b7', '#f72585', '#3a56d4', '#4895ef'];
      
      for (let i = 0; i < 80; i++) {
        const particle = document.createElement('div');
        particle.className = 'particle';
        
        // Random properties
        const size = Math.random() * 15 + 5;
        const posX = Math.random() * 100;
        const posY = Math.random() * 100;
        const tx = (Math.random() - 0.5) * 800;
        const ty = (Math.random() - 0.5) * 800;
        const tz = (Math.random() * 200) - 100;
        const duration = Math.random() * 25 + 15;
        const delay = Math.random() * 20;
        const color = colors[Math.floor(Math.random() * colors.length)];
        const blur = Math.random() * 3 + 1;
        
        particle.style.width = `${size}px`;
        particle.style.height = `${size}px`;
        particle.style.left = `${posX}%`;
        particle.style.top = `${posY}%`;
        particle.style.setProperty('--tx', `${tx}px`);
        particle.style.setProperty('--ty', `${ty}px`);
        particle.style.setProperty('--tz', `${tz}px`);
        particle.style.animationDuration = `${duration}s`;
        particle.style.animationDelay = `${delay}s`;
        particle.style.background = `radial-gradient(circle, ${color} 0%, transparent 70%)`;
        particle.style.filter = `blur(${blur}px)`;
        
        particlesContainer.appendChild(particle);
      }
    }

    // Create confetti effect
    function createConfetti() {
      const colors = ['#4361ee', '#4cc9f0', '#7209b7', '#f72585', '#3a56d4', '#4895ef'];
      const container = document.querySelector('.signup-container');
      
      for (let i = 0; i < 150; i++) {
        const confetti = document.createElement('div');
        confetti.className = 'confetti';
        
        // Random properties
        const size = Math.random() * 10 + 5;
        const left = Math.random() * 100;
        const color = colors[Math.floor(Math.random() * colors.length)];
        const delay = Math.random() * 2;
        const duration = Math.random() * 2 + 2;
        const shape = Math.random() > 0.5 ? '50%' : '0';
        const rotation = Math.random() * 1080;
        
        confetti.style.width = `${size}px`;
        confetti.style.height = `${size}px`;
        confetti.style.left = `${left}%`;
        confetti.style.backgroundColor = color;
        confetti.style.borderRadius = shape;
        confetti.style.animationDelay = `${delay}s`;
        confetti.style.animationDuration = `${duration}s`;
        confetti.style.setProperty('--rotation', `${rotation}deg`);
        
        container.appendChild(confetti);
      }
    }

    // Form validation
    function validateForm() {
      let isValid = true;
      const form = document.getElementById('signupForm');
      
      // Validate name
      const nameInput = document.getElementById('yourName');
      const nameGroup = nameInput.closest('.form-group');
      if (nameInput.value.trim() === '') {
        nameGroup.classList.add('error');
        isValid = false;
      } else {
        nameGroup.classList.remove('error');
        nameGroup.classList.add('success');
      }
      
      // Validate email
      const emailInput = document.getElementById('email');
      const emailGroup = emailInput.closest('.form-group');
      const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      if (!emailRegex.test(emailInput.value.trim())) {
        emailGroup.classList.add('error');
        isValid = false;
      } else {
        emailGroup.classList.remove('error');
        emailGroup.classList.add('success');
      }
      
      // Validate password
      const passwordInput = document.getElementById('password');
      const passwordGroup = passwordInput.closest('.form-group');
      if (passwordInput.value.length < 8) {
        passwordGroup.classList.add('error');
        isValid = false;
      } else {
        passwordGroup.classList.remove('error');
        passwordGroup.classList.add('success');
      }
      
      return isValid;
    }

    // Enhanced form submission with progress animation
    document.getElementById('signupForm').addEventListener('submit', function(e) {
      e.preventDefault();
      
      // Validate form first
      if (!validateForm()) {
        return;
      }
      
      const btn = document.querySelector('.btn-signup');
      const btnContent = document.querySelector('.btn-content');
      const icon = document.querySelector('.btn-content i');
      
      // Show loading state
      btn.style.pointerEvents = 'none';
      btnContent.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Creating Account...';
      
      // Create progress bar
      const progressBar = document.createElement('div');
      progressBar.style.position = 'absolute';
      progressBar.style.bottom = '0';
      progressBar.style.left = '0';
      progressBar.style.height = '4px';
      progressBar.style.background = 'rgba(255,255,255,0.5)';
      progressBar.style.width = '0%';
      progressBar.style.transition = 'width 1.5s cubic-bezier(0.22, 1, 0.36, 1)';
      progressBar.style.borderRadius = '0 0 8px 8px';
      btn.appendChild(progressBar);
      
      // Animate progress
      setTimeout(() => {
        progressBar.style.width = '100%';
      }, 10);
      
      // Simulate account creation
      setTimeout(() => {
        // Show success state
        btnContent.innerHTML = '<i class="fas fa-check"></i> Account Created!';
        btn.style.background = 'linear-gradient(135deg, #4BB543, #3a9a33)';
        progressBar.style.background = 'rgba(255,255,255,0.8)';
        
        // Create confetti celebration
        createConfetti();
        
        // Submit the form after animation
        setTimeout(() => {
          this.submit();
        }, 1500);
      }, 1500);
    });

    // Add 3D tilt effect to card
    function addTiltEffect() {
      const card = document.querySelector('.signup-card');
      const container = document.querySelector('.signup-container');
      
      container.addEventListener('mousemove', (e) => {
        const xAxis = (window.innerWidth / 2 - e.pageX) / 25;
        const yAxis = (window.innerHeight / 2 - e.pageY) / 25;
        card.style.transform = `rotateY(${xAxis}deg) rotateX(${yAxis}deg)`;
      });
      
      // Reset on mouse leave
      container.addEventListener('mouseleave', () => {
        card.style.transform = 'rotateY(0deg) rotateX(0deg)';
        card.style.transition = 'transform 0.5s ease';
        setTimeout(() => {
          card.style.transition = 'transform 0.8s cubic-bezier(0.175, 0.885, 0.32, 1.275), box-shadow 0.8s ease';
        }, 500);
      });
    }

    // Initialize everything when page loads
    document.addEventListener('DOMContentLoaded', function() {
      createBubbles();
      createParticles();
      addTiltEffect();
      
      // Add floating label functionality
      const inputs = document.querySelectorAll('.form-control');
      inputs.forEach(input => {
        // Check if input has value on page load
        if (input.value) {
          const label = input.nextElementSibling;
          label.style.top = '0';
          label.style.transform = 'translateY(-50%) scale(0.9)';
          label.style.color = 'var(--primary)';
          label.style.background = 'var(--white)';
        }
        
        input.addEventListener('focus', () => {
          const label = input.nextElementSibling;
          label.style.top = '0';
          label.style.transform = 'translateY(-50%) scale(0.9)';
          label.style.color = 'var(--primary)';
          label.style.background = 'var(--white)';
        });
        
        input.addEventListener('blur', () => {
          if (!input.value) {
            const label = input.nextElementSibling;
            label.style.top = '50%';
            label.style.transform = 'translateY(-50%)';
            label.style.color = 'var(--text-gray)';
            label.style.background = 'rgba(255, 255, 255, 0.8)';
          }
        });
      });
    });
  </script>
</body>
</html>
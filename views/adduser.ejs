<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta content="width=device-width, initial-scale=1.0" name="viewport" />

    <title>Alumni Registration</title>
    <meta content="" name="description" />
    <meta content="" name="keywords" />

    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">

    <!-- Bootstrap CSS -->
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3"
      crossorigin="anonymous"
    />

    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

    <style>
      :root {
        --primary-color: #4361ee;
        --primary-light: #6b85f1;
        --primary-dark: #2a4acb;
        --secondary-color: #3a0ca3;
        --secondary-light: #5a34c0;
        --secondary-dark: #27077a;
        --accent-color: #4cc9f0;
        --accent-light: #7fd8f5;
        --accent-dark: #2aa5d1;
        --light-color: #f8f9fa;
        --dark-color: #212529;
        --border-color: #dee2e6;
        --error-color: #ef233c;
        --success-color: #2ec4b6;
        --warning-color: #ffbe0b;
        --info-color: #4895ef;
      }
      
      /* Dark theme variables */
      [data-theme="dark"] {
        --light-color: #121212;
        --dark-color: #f8f9fa;
        --border-color: #444;
        --bg-color: #1e1e1e;
        --card-bg: #2d2d2d;
        --text-muted: #aaa;
      }
      
      body {
        font-family: 'Poppins', sans-serif;
        background-color: var(--bg-color, #f5f7fa);
        color: var(--dark-color);
        overflow-x: hidden;
        position: relative;
        min-height: 100vh;
        transition: background-color 0.3s ease, color 0.3s ease;
      }
      
      /* Theme toggle button */
      .theme-toggle {
        position: fixed;
        bottom: 20px;
        right: 20px;
        width: 50px;
        height: 50px;
        border-radius: 50%;
        background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
        color: white;
        border: none;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        z-index: 1000;
        transition: all 0.3s ease;
      }
      
      .theme-toggle:hover {
        transform: scale(1.1);
        box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3);
      }
      
      .theme-toggle i {
        font-size: 1.2rem;
      }
      
      /* Enhanced Background Animation */
      .particles-container {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: -1;
        overflow: hidden;
        background: linear-gradient(135deg, var(--bg-color, #f5f7fa) 0%, var(--bg-color, #e4e8f0) 100%);
        transition: background 0.3s ease;
      }
      
      .particle {
        position: absolute;
        border-radius: 50%;
        background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
        opacity: 0;
        filter: blur(1px);
        will-change: transform, opacity;
        animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      }
      
      .particle-1 {
        background: linear-gradient(135deg, var(--primary-color), var(--accent-color));
        box-shadow: 0 0 15px 5px rgba(67, 97, 238, 0.3);
      }
      
      .particle-2 {
        background: linear-gradient(135deg, var(--secondary-color), var(--primary-color));
        box-shadow: 0 0 15px 5px rgba(58, 12, 163, 0.3);
      }
      
      .particle-3 {
        background: linear-gradient(135deg, var(--accent-color), var(--primary-light));
        box-shadow: 0 0 15px 5px rgba(76, 201, 240, 0.3);
      }
      
      @keyframes float-up {
        0% {
          transform: translateY(100vh) scale(0.5);
          opacity: 0;
        }
        10% {
          opacity: 0.8;
        }
        90% {
          opacity: 0.8;
        }
        100% {
          transform: translateY(-20vh) scale(1.2);
          opacity: 0;
        }
      }
      
      @keyframes float-down {
        0% {
          transform: translateY(-20vh) scale(0.5);
          opacity: 0;
        }
        10% {
          opacity: 0.8;
        }
        90% {
          opacity: 0.8;
        }
        100% {
          transform: translateY(100vh) scale(1.2);
          opacity: 0;
        }
      }
      
      @keyframes float-left {
        0% {
          transform: translateX(100vw) scale(0.5);
          opacity: 0;
        }
        10% {
          opacity: 0.8;
        }
        90% {
          opacity: 0.8;
        }
        100% {
          transform: translateX(-20vw) scale(1.2);
          opacity: 0;
        }
      }
      
      @keyframes float-right {
        0% {
          transform: translateX(-20vw) scale(0.5);
          opacity: 0;
        }
        10% {
          opacity: 0.8;
        }
        90% {
          opacity: 0.8;
        }
        100% {
          transform: translateX(100vw) scale(1.2);
          opacity: 0;
        }
      }
      
      @keyframes float-diagonal-1 {
        0% {
          transform: translate(100vw, 100vh) scale(0.5);
          opacity: 0;
        }
        10% {
          opacity: 0.8;
        }
        90% {
          opacity: 0.8;
        }
        100% {
          transform: translate(-20vw, -20vh) scale(1.2);
          opacity: 0;
        }
      }
      
      @keyframes float-diagonal-2 {
        0% {
          transform: translate(-20vw, 100vh) scale(0.5);
          opacity: 0;
        }
        10% {
          opacity: 0.8;
        }
        90% {
          opacity: 0.8;
        }
        100% {
          transform: translate(100vw, -20vh) scale(1.2);
          opacity: 0;
        }
      }
      
      /* Floating circles */
      .floating-circles {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: -1;
        overflow: hidden;
      }
      
      .floating-circle {
        position: absolute;
        border-radius: 50%;
        filter: blur(40px);
        opacity: 0.15;
        will-change: transform;
      }
      
      .circle-1 {
        background: var(--primary-color);
        width: 300px;
        height: 300px;
        animation: drift-1 25s linear infinite;
      }
      
      .circle-2 {
        background: var(--secondary-color);
        width: 400px;
        height: 400px;
        animation: drift-2 30s linear infinite reverse;
      }
      
      .circle-3 {
        background: var(--accent-color);
        width: 250px;
        height: 250px;
        animation: drift-3 35s linear infinite;
      }
      
      @keyframes drift-1 {
        0% {
          transform: translate(10vw, 10vh);
        }
        25% {
          transform: translate(80vw, 20vh);
        }
        50% {
          transform: translate(60vw, 70vh);
        }
        75% {
          transform: translate(20vw, 60vh);
        }
        100% {
          transform: translate(10vw, 10vh);
        }
      }
      
      @keyframes drift-2 {
        0% {
          transform: translate(80vw, 60vh);
        }
        33% {
          transform: translate(20vw, 20vh);
        }
        66% {
          transform: translate(40vw, 80vh);
        }
        100% {
          transform: translate(80vw, 60vh);
        }
      }
      
      @keyframes drift-3 {
        0% {
          transform: translate(30vw, 80vh);
        }
        50% {
          transform: translate(70vw, 30vh);
        }
        100% {
          transform: translate(30vw, 80vh);
        }
      }
      
      /* Glow effect */
      .glow-effect {
        position: fixed;
        top: 50%;
        left: 50%;
        width: 200vw;
        height: 200vh;
        background: radial-gradient(circle at center, rgba(67, 97, 238, 0.05) 0%, rgba(67, 97, 238, 0) 70%);
        transform: translate(-50%, -50%);
        z-index: -1;
        animation: pulse-glow 15s ease infinite;
      }
      
      @keyframes pulse-glow {
        0% {
          opacity: 0.3;
          transform: translate(-50%, -50%) scale(0.8);
        }
        50% {
          opacity: 0.7;
          transform: translate(-50%, -50%) scale(1.2);
        }
        100% {
          opacity: 0.3;
          transform: translate(-50%, -50%) scale(0.8);
        }
      }
      
      /* Form Container Animation */
      .register-container {
        max-width: 500px;
        margin: 0 auto;
        animation: fadeInUp 0.8s ease-out both;
        position: relative;
        z-index: 1;
      }
      
      @keyframes fadeInUp {
        from {
          opacity: 0;
          transform: translateY(40px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }
      
      .card {
        border: none;
        border-radius: 16px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        transition: transform 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275), box-shadow 0.4s ease;
        background-color: var(--card-bg, rgba(255, 255, 255, 0.98));
        backdrop-filter: blur(8px);
        position: relative;
        z-index: 2;
      }
      
      .card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: linear-gradient(90deg, var(--primary-color), var(--accent-color), var(--secondary-color));
        background-size: 200% 200%;
        animation: gradient-shift 3s ease infinite;
      }
      
      @keyframes gradient-shift {
        0% {
          background-position: 0% 50%;
        }
        50% {
          background-position: 100% 50%;
        }
        100% {
          background-position: 0% 50%;
        }
      }
      
      .card:hover {
        transform: translateY(-8px) scale(1.01);
        box-shadow: 0 15px 40px rgba(0, 0, 0, 0.15);
      }
      
      .card-header {
        background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
        color: white;
        padding: 1.75rem;
        text-align: center;
        border-bottom: none;
        position: relative;
        overflow: hidden;
      }
      
      .card-header::before {
        content: '';
        position: absolute;
        top: -50%;
        left: -50%;
        width: 200%;
        height: 200%;
        background: linear-gradient(
          to bottom right,
          rgba(255, 255, 255, 0.15) 0%,
          rgba(255, 255, 255, 0) 60%
        );
        transform: rotate(30deg);
        animation: shine 4s infinite;
      }
      
      @keyframes shine {
        0% {
          transform: rotate(30deg) translate(-40%, -40%);
        }
        100% {
          transform: rotate(30deg) translate(40%, 40%);
        }
      }
      
      .card-title {
        font-weight: 600;
        margin-bottom: 0.5rem;
        position: relative;
        font-size: 1.5rem;
        letter-spacing: 0.5px;
      }
      
      .card-subtitle {
        font-size: 0.95rem;
        opacity: 0.9;
        position: relative;
        font-weight: 300;
      }
      
      /* Form Elements */
      .form-label {
        font-weight: 500;
        margin-bottom: 0.5rem;
        color: var(--dark-color);
        transition: all 0.3s ease;
      }
      
      .form-control {
        padding: 0.85rem 1.15rem;
        border: 1px solid var(--border-color);
        border-radius: 10px;
        transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
        font-size: 0.95rem;
        background-color: var(--card-bg, #fff);
        color: var(--dark-color);
      }
      
      .form-control:focus {
        border-color: var(--primary-color);
        box-shadow: 0 0 0 0.25rem rgba(67, 97, 238, 0.15);
        transform: translateY(-2px);
      }
      
      .input-group-text {
        background-color: var(--light-color);
        border-color: var(--border-color);
        transition: all 0.3s ease;
        color: var(--dark-color);
      }
      
      .input-group:focus-within .input-group-text {
        background-color: var(--primary-light);
        color: white;
        border-color: var(--primary-color);
      }
      
      .btn-primary {
        background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
        border: none;
        padding: 0.85rem;
        font-weight: 500;
        letter-spacing: 0.5px;
        transition: all 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
        position: relative;
        overflow: hidden;
        border-radius: 8px;
        text-transform: uppercase;
        font-size: 0.95rem;
      }
      
      .btn-primary:hover {
        background: linear-gradient(135deg, var(--primary-dark), var(--secondary-dark));
        transform: translateY(-3px);
        box-shadow: 0 8px 20px rgba(67, 97, 238, 0.3);
      }
      
      .btn-primary:active {
        transform: translateY(1px);
        box-shadow: 0 2px 10px rgba(67, 97, 238, 0.3);
      }
      
      .btn-primary::after {
        content: '';
        position: absolute;
        top: -50%;
        left: -60%;
        width: 200%;
        height: 200%;
        background: rgba(255, 255, 255, 0.15);
        transform: rotate(30deg);
        transition: all 0.7s cubic-bezier(0.19, 1, 0.22, 1);
      }
      
      .btn-primary:hover::after {
        left: 100%;
      }
      
      .invalid-feedback {
        font-size: 0.85rem;
        animation: shake 0.5s cubic-bezier(.36,.07,.19,.97) both;
        transform: translate3d(0, 0, 0);
      }
      
      @keyframes shake {
        10%, 90% {
          transform: translate3d(-1px, 0, 0);
        }
        
        20%, 80% {
          transform: translate3d(2px, 0, 0);
        }
      
        30%, 50%, 70% {
          transform: translate3d(-4px, 0, 0);
        }
      
        40%, 60% {
          transform: translate3d(4px, 0, 0);
        }
      }
      
      .form-check-label {
        font-size: 0.9rem;
        transition: all 0.3s ease;
        color: var(--dark-color);
      }
      
      .form-check-input:checked {
        background-color: var(--primary-color);
        border-color: var(--primary-color);
      }
      
      .form-check-input:focus {
        box-shadow: 0 0 0 0.25rem rgba(67, 97, 238, 0.25);
      }
      
      .terms-link {
        color: var(--primary-color);
        text-decoration: none;
        font-weight: 500;
        transition: all 0.3s ease;
        position: relative;
      }
      
      .terms-link:hover {
        color: var(--secondary-color);
        text-decoration: underline;
      }
      
      .terms-link::after {
        content: '';
        position: absolute;
        bottom: -2px;
        left: 0;
        width: 0;
        height: 2px;
        background-color: var(--secondary-color);
        transition: width 0.3s ease;
      }
      
      .terms-link:hover::after {
        width: 100%;
      }
      
      .login-link {
        color: var(--primary-color);
        font-weight: 500;
        transition: all 0.3s ease;
      }
      
      .login-link:hover {
        color: var(--secondary-dark);
        text-decoration: none;
      }
      
      .credits {
        font-size: 0.85rem;
        color: var(--text-muted, #6c757d);
        text-align: center;
        margin-top: 1.5rem;
        opacity: 0.8;
        transition: all 0.3s ease;
      }
      
      .credits:hover {
        opacity: 1;
        transform: translateY(-2px);
      }
      
      .required-field::after {
        content: " *";
        color: var(--error-color);
      }
      
      /* Floating label effect */
      .form-floating {
        transition: all 0.3s ease;
      }
      
      .form-floating .form-control:focus ~ label,
      .form-floating .form-control:not(:placeholder-shown) ~ label {
        transform: scale(0.85) translateY(-0.5rem) translateX(0.15rem);
        color: var(--primary-color);
      }
      
      /* Ripple effect */
      .ripple {
        position: absolute;
        border-radius: 50%;
        background-color: rgba(255, 255, 255, 0.4);
        transform: scale(0);
        animation: ripple 0.6s linear;
        pointer-events: none;
      }
      
      @keyframes ripple {
        to {
          transform: scale(2.5);
          opacity: 0;
        }
      }
      
      /* Success animation */
      .success-checkmark {
        width: 80px;
        height: 80px;
        margin: 0 auto;
        position: relative;
      }
      
      .success-checkmark .check-icon {
        width: 80px;
        height: 80px;
        position: relative;
        border-radius: 50%;
        box-sizing: content-box;
        border: 4px solid var(--success-color);
        background-color: var(--card-bg, white);
      }
      
      .success-checkmark .check-icon::before {
        top: 3px;
        left: -2px;
        width: 30px;
        transform-origin: 100% 50%;
        border-radius: 100px 0 0 100px;
      }
      
      .success-checkmark .check-icon::after {
        top: 0;
        left: 30px;
        width: 60px;
        transform-origin: 0 50%;
        border-radius: 0 100px 100px 0;
        animation: rotate-circle 4.25s ease-in;
      }
      
      .success-checkmark .check-icon::before, .success-checkmark .check-icon::after {
        content: '';
        height: 100px;
        position: absolute;
        background: transparent;
        transform: rotate(-45deg);
      }
      
      .success-checkmark .check-icon .icon-line {
        height: 5px;
        background-color: var(--success-color);
        display: block;
        border-radius: 2px;
        position: absolute;
        z-index: 10;
      }
      
      .success-checkmark .check-icon .icon-line.line-tip {
        top: 46px;
        left: 14px;
        width: 25px;
        transform: rotate(45deg);
        animation: icon-line-tip 0.75s;
      }
      
      .success-checkmark .check-icon .icon-line.line-long {
        top: 38px;
        right: 8px;
        width: 47px;
        transform: rotate(-45deg);
        animation: icon-line-long 0.75s;
      }
      
      @keyframes icon-line-tip {
        0% {
          width: 0;
          left: 1px;
          top: 19px;
        }
        54% {
          width: 0;
          left: 1px;
          top: 19px;
        }
        70% {
          width: 50px;
          left: -8px;
          top: 37px;
        }
        84% {
          width: 17px;
          left: 21px;
          top: 48px;
        }
        100% {
          width: 25px;
          left: 14px;
          top: 46px;
        }
      }
      
      @keyframes icon-line-long {
        0% {
          width: 0;
          right: 46px;
          top: 54px;
        }
        65% {
          width: 0;
          right: 46px;
          top: 54px;
        }
        84% {
          width: 55px;
          right: 0px;
          top: 35px;
        }
        100% {
          width: 47px;
          right: 8px;
          top: 38px;
        }
      }
      
      @keyframes rotate-circle {
        0% {
          transform: rotate(-45deg);
        }
        5% {
          transform: rotate(-45deg);
        }
        12% {
          transform: rotate(-405deg);
        }
        100% {
          transform: rotate(-405deg);
        }
      }
      
      /* Responsive adjustments */
      @media (max-width: 576px) {
        .card-body {
          padding: 1.5rem;
        }
        
        .card-title {
          font-size: 1.3rem;
        }
        
        .card-subtitle {
          font-size: 0.85rem;
        }
        
        .btn-primary {
          padding: 0.75rem;
        }
      }
      
      /* Loading spinner */
      .spinner {
        display: inline-block;
        width: 20px;
        height: 20px;
        border: 3px solid rgba(255, 255, 255, 0.3);
        border-radius: 50%;
        border-top-color: white;
        animation: spin 1s ease-in-out infinite;
        margin-right: 8px;
        vertical-align: middle;
      }
      
      @keyframes spin {
        to {
          transform: rotate(360deg);
        }
      }
      
      /* Confetti effect */
      .confetti-container {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        pointer-events: none;
        z-index: 1000;
      }
      
      .confetti {
        position: absolute;
        width: 10px;
        height: 10px;
        background-color: var(--primary-color);
        opacity: 0;
        animation: confetti-fall 5s linear forwards;
      }
      
      @keyframes confetti-fall {
        0% {
          transform: translateY(-100px) rotate(0deg);
          opacity: 1;
        }
        100% {
          transform: translateY(100vh) rotate(720deg);
          opacity: 0;
        }
      }
      
      /* Custom scrollbar */
      ::-webkit-scrollbar {
        width: 8px;
        height: 8px;
      }
      
      ::-webkit-scrollbar-track {
        background: rgba(0, 0, 0, 0.05);
      }
      
      ::-webkit-scrollbar-thumb {
        background: var(--primary-color);
        border-radius: 4px;
      }
      
      ::-webkit-scrollbar-thumb:hover {
        background: var(--primary-dark);
      }
      
      /* Modal styles for dark theme */
      [data-theme="dark"] .modal-content {
        background-color: #2d2d2d;
        color: #f8f9fa;
      }
      
      [data-theme="dark"] .modal-header,
      [data-theme="dark"] .modal-footer {
        border-color: #444;
      }
      
      [data-theme="dark"] .text-muted {
        color: #aaa !important;
      }
      
      /* Select dropdown styles for dark theme */
      [data-theme="dark"] .form-select {
        background-color: #2d2d2d;
        color: #f8f9fa;
        border-color: #444;
      }
      
      [data-theme="dark"] .form-select:focus {
        border-color: var(--primary-color);
        box-shadow: 0 0 0 0.25rem rgba(67, 97, 238, 0.25);
      }
    </style>
  </head>

  <body>
    
  <%- include("../utils/header") %>
  <%- include("side"); %>                                 

    <!-- Theme Toggle Button -->
    <button class="theme-toggle" id="themeToggle">
      <i class="fas fa-moon"></i>
    </button>
    
    <!-- Background Elements -->
    <div class="particles-container" id="particles-js"></div>
    <div class="floating-circles">
      <div class="floating-circle circle-1"></div>
      <div class="floating-circle circle-2"></div>
      <div class="floating-circle circle-3"></div>
    </div>
    <div class="glow-effect"></div>
    
    <main>
      <div class="container py-5">
        <div class="register-container">
          <div class="text-center mb-4">
            <h2 class="fw-bold">Alumni Registration</h2>
            <p class="text-muted">Join our alumni network and stay connected</p>
          </div>

          <div class="card">
            <div class="card-header">
              <h5 class="card-title">Create an Account</h5>
              <p class="card-subtitle">Enter your personal details to register</p>
            </div>
            
            <div class="card-body">
              <form class="row g-3 needs-validation" novalidate action="/user_register" method="get" id="registrationForm">
                <div class="col-12">
                  <label for="Name" class="form-label required-field">Your Name</label>
                  <div class="input-group has-validation">
                    <span class="input-group-text"><i class="fas fa-user"></i></span>
                    <input type="text" name="Name" class="form-control" id="Name" required />
                    <div class="invalid-feedback">Please enter your name.</div>
                  </div>
                </div>

                <div class="col-12">
                  <label for="FatherName" class="form-label required-field">Father's Name</label>
                  <div class="input-group has-validation">
                    <span class="input-group-text"><i class="fas fa-user-tie"></i></span>
                    <input type="text" name="FatherName" class="form-control" id="FatherName" required />
                    <div class="invalid-feedback">Please enter your father's name.</div>
                  </div>
                </div>

                <div class="col-12">
                  <label for="MobileNo" class="form-label required-field">Mobile No.</label>
                  <div class="input-group has-validation">
                    <span class="input-group-text"><i class="fas fa-mobile-alt"></i></span>
                    <input type="number" name="MobileNo" class="form-control" id="MobileNo" required />
                    <div class="invalid-feedback">Please enter a valid mobile number.</div>
                  </div>
                </div>

                <div class="col-12">
                  <label for="DOB" class="form-label required-field">Date of Birth</label>
                  <div class="input-group has-validation">
                    <span class="input-group-text"><i class="fas fa-calendar-alt"></i></span>
                    <input type="date" name="Dob" class="form-control" id="DOB" required />
                    <div class="invalid-feedback">Please select your date of birth.</div>
                  </div>
                </div>

                <div class="col-12">
                  <label for="Email" class="form-label required-field">Email</label>
                  <div class="input-group has-validation">
                    <span class="input-group-text"><i class="fas fa-envelope"></i></span>
                    <input type="email" name="Email" class="form-control" id="Email" required />
                    <div class="invalid-feedback">Please enter a valid email address.</div>
                  </div>
                </div>

                <div class="col-12">
                  <label for="Gender" class="form-label required-field">Gender</label>
                  <select name="Gender" class="form-select" id="Gender" required>
                    <option value="" selected disabled>Select gender</option>
                    <option value="Male">Male</option>
                    <option value="Female">Female</option>
                    <option value="Other">Other</option>
                  </select>
                  <div class="invalid-feedback">Please select your gender.</div>
                </div>

                <div class="col-12">
                  <label for="ResidentialAddress" class="form-label required-field">Residential Address</label>
                  <div class="input-group has-validation">
                    <span class="input-group-text"><i class="fas fa-home"></i></span>
                    <input type="text" name="ResidentialAddress" class="form-control" id="ResidentialAddress" required />
                    <div class="invalid-feedback">Please enter your residential address.</div>
                  </div>
                </div>

                <div class="col-12">
                  <label for="Password" class="form-label required-field">Password</label>
                  <div class="input-group has-validation">
                    <span class="input-group-text"><i class="fas fa-lock"></i></span>
                    <input type="password" name="Password" class="form-control" id="Password" required />
                    <div class="invalid-feedback">Please create a password.</div>
                  </div>
                </div>

                <div class="col-12">
                  <label for="AboutUs" class="form-label required-field">Amount</label>
                  <div class="input-group has-validation">
                    <span class="input-group-text"><i class="fas fa-rupee-sign"></i></span>
                    <input type="text" name="Amount" class="form-control" id="AboutUs" required />
                    <div class="invalid-feedback">Please enter the amount.</div>
                  </div>
                </div>

                <div class="col-12">
                  <div class="form-check">
                    <input class="form-check-input" name="terms" type="checkbox" value="" id="acceptTerms" required />
                    <label class="form-check-label" for="acceptTerms">
                      I agree and accept the <a href="#" class="terms-link">terms and conditions</a>
                    </label>
                    <div class="invalid-feedback">You must agree before submitting.</div>
                  </div>
                </div>

                <div class="col-12">
                  <button class="btn btn-primary w-100 py-2" type="submit" id="submitBtn">
                    <i class="fas fa-user-plus me-2"></i> Add User
                  </button>
                </div>
              </form>
            </div>
          </div>

          <div class="credits mt-4">
            &copy; 2023 Alumni Network. All rights reserved.
          </div>
        </div>
      </div>
    </main>

    <!-- Success Modal -->
    <div class="modal fade" id="successModal" tabindex="-1" aria-hidden="true">
      <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
          <div class="modal-body text-center p-5">
            <div class="success-checkmark">
              <div class="check-icon">
                <span class="icon-line line-tip"></span>
                <span class="icon-line line-long"></span>
                <div class="icon-circle"></div>
                <div class="icon-fix"></div>
              </div>
            </div>
            <h4 class="mt-4 mb-3">Registration Successful!</h4>
            <p class="text-muted">Thank you for joining our alumni network. We've sent a confirmation email to your address.</p>
            <button type="button" class="btn btn-primary mt-3" data-bs-dismiss="modal">Continue</button>
          </div>
        </div>
      </div>
    </div>

  <%- include("../utils/footer"); %>  
    <!-- Bootstrap JS -->
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p"
      crossorigin="anonymous"
    ></script>

    <script>
      // Enhanced Particle Background
      document.addEventListener('DOMContentLoaded', function() {
        const particlesContainer = document.getElementById('particles-js');
        const particleCount = 100;
        const animations = [
          'float-up', 'float-down', 'float-left', 'float-right', 
          'float-diagonal-1', 'float-diagonal-2'
        ];
        
        for (let i = 0; i < particleCount; i++) {
          const particle = document.createElement('div');
          particle.classList.add('particle');
          
          // Random particle type (1-3)
          const particleType = Math.floor(Math.random() * 3) + 1;
          particle.classList.add(`particle-${particleType}`);
          
          // Random size between 3px and 12px
          const size = Math.random() * 9 + 3;
          particle.style.width = `${size}px`;
          particle.style.height = `${size}px`;
          
          // Random position
          particle.style.left = `${Math.random() * 100}vw`;
          particle.style.top = `${Math.random() * 100}vh`;
          
          // Random animation
          const animIndex = Math.floor(Math.random() * animations.length);
          const animName = animations[animIndex];
          const duration = Math.random() * 5 + 5; // 5-10 seconds
          const delay = Math.random() * 5;
          
          particle.style.animation = `${animName} ${duration}s ${delay}s infinite`;
          
          particlesContainer.appendChild(particle);
        }
        
        // Add ripple effect to buttons
        document.querySelectorAll('.btn').forEach(btn => {
          btn.addEventListener('click', function(e) {
            const rect = this.getBoundingClientRect();
            const x = e.clientX - rect.left;
            const y = e.clientY - rect.top;
            
            const ripple = document.createElement('span');
            ripple.classList.add('ripple');
            ripple.style.left = `${x}px`;
            ripple.style.top = `${y}px`;
            
            this.appendChild(ripple);
            
            setTimeout(() => {
              ripple.remove();
            }, 600);
          });
        });
        
        // Form submission handler
        const form = document.getElementById('registrationForm');
        const submitBtn = document.getElementById('submitBtn');
        const successModal = new bootstrap.Modal(document.getElementById('successModal'));
        
        form.addEventListener('submit', function(e) {
          e.preventDefault();
          
          if (!form.checkValidity()) {
            e.stopPropagation();
            form.classList.add('was-validated');
            return;
          }
          
          // Simulate form submission
          submitBtn.disabled = true;
          submitBtn.innerHTML = '<span class="spinner"></span> Processing...';
          
          setTimeout(() => {
            // Show success modal
            successModal.show();
            
            // Reset form
            submitBtn.disabled = false;
            submitBtn.innerHTML = '<i class="fas fa-user-plus me-2"></i> Add User';
            
            // Create confetti effect
            createConfetti();
          }, 2000);
        });
        
        // Confetti effect
        function createConfetti() {
          const colors = [
            '#4361ee', '#3a0ca3', '#4cc9f0', '#4895ef', 
            '#f72585', '#7209b7', '#3a86ff', '#ffbe0b'
          ];
          
          const container = document.createElement('div');
          container.classList.add('confetti-container');
          document.body.appendChild(container);
          
          for (let i = 0; i < 100; i++) {
            const confetti = document.createElement('div');
            confetti.classList.add('confetti');
            
            // Random properties
            const size = Math.random() * 10 + 5;
            const color = colors[Math.floor(Math.random() * colors.length)];
            const left = Math.random() * 100;
            const delay = Math.random() * 5;
            const duration = Math.random() * 3 + 2;
            
            confetti.style.width = `${size}px`;
            confetti.style.height = `${size}px`;
            confetti.style.backgroundColor = color;
            confetti.style.left = `${left}vw`;
            confetti.style.animationDelay = `${delay}s`;
            confetti.style.animationDuration = `${duration}s`;
            
            // Random shape (square or circle)
            if (Math.random() > 0.5) {
              confetti.style.borderRadius = '50%';
            }
            
            container.appendChild(confetti);
          }
          
          // Remove confetti after animation
          setTimeout(() => {
            container.remove();
          }, 5000);
        }
        
        // Animate elements when they come into view
        const animateOnScroll = function() {
          const elements = document.querySelectorAll('.card, .register-container');
          
          elements.forEach(element => {
            const elementPosition = element.getBoundingClientRect().top;
            const windowHeight = window.innerHeight;
            
            if (elementPosition < windowHeight - 100) {
              element.style.opacity = '1';
              element.style.transform = 'translateY(0)';
            }
          });
        };
        
        // Initial check
        animateOnScroll();
        
        // Check on scroll
        window.addEventListener('scroll', animateOnScroll);
        
        // Add hover effect to form inputs
        document.querySelectorAll('.form-control').forEach(input => {
          input.addEventListener('focus', function() {
            this.parentElement.querySelector('.input-group-text').style.backgroundColor = 'var(--primary-light)';
            this.parentElement.querySelector('.input-group-text').style.color = 'white';
          });
          
          input.addEventListener('blur', function() {
            this.parentElement.querySelector('.input-group-text').style.backgroundColor = 'var(--light-color)';
            this.parentElement.querySelector('.input-group-text').style.color = 'inherit';
          });
        });
        
        // Theme toggle functionality
        const themeToggle = document.getElementById('themeToggle');
        const currentTheme = localStorage.getItem('theme') || 'light';
        
        // Set initial theme
        document.documentElement.setAttribute('data-theme', currentTheme);
        updateThemeIcon(currentTheme);
        
        // Toggle theme on button click
        themeToggle.addEventListener('click', function() {
          const currentTheme = document.documentElement.getAttribute('data-theme');
          const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
          
          document.documentElement.setAttribute('data-theme', newTheme);
          localStorage.setItem('theme', newTheme);
          updateThemeIcon(newTheme);
        });
        
        // Update theme icon based on current theme
        function updateThemeIcon(theme) {
          const icon = themeToggle.querySelector('i');
          if (theme === 'dark') {
            icon.classList.remove('fa-moon');
            icon.classList.add('fa-sun');
          } else {
            icon.classList.remove('fa-sun');
            icon.classList.add('fa-moon');
          }
        }
      });
      
      // Form validation
      (function () {
        'use strict'
        
        // Fetch all the forms we want to apply custom Bootstrap validation styles to
        var forms = document.querySelectorAll('.needs-validation')
        
        // Loop over them and prevent submission
        Array.prototype.slice.call(forms)
          .forEach(function (form) {
            form.addEventListener('submit', function (event) {
              if (!form.checkValidity()) {
                event.preventDefault()
                event.stopPropagation()
                
                // Add shake animation to invalid fields
                form.querySelectorAll(':invalid').forEach(el => {
                  el.style.animation = 'shake 0.5s cubic-bezier(.36,.07,.19,.97) both';
                  setTimeout(() => {
                    el.style.animation = '';
                  }, 500);
                });
              }
              
              form.classList.add('was-validated')
            }, false)
          })
      })()
    </script>
  </body>
</html>
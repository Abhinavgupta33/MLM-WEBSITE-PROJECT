<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Premium Header Component</title>
  <style>
    /* Modern CSS Reset with Smooth Scrolling */
    :root {
      --header-height: 80px;
      --header-scrolled-height: 70px;
      --header-bg: rgba(255, 255, 255, 0.98);
      --header-scrolled-bg: rgba(255, 255, 255, 0.96);
      --header-shadow: 0 4px 30px rgba(0, 0, 0, 0.08);
      --header-scrolled-shadow: 0 2px 15px rgba(0, 0, 0, 0.05);
      --primary-color: #4361ee;
      --primary-dark: #3a0ca3;
      --primary-light: #4895ef;
      --primary-gradient: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-dark) 100%);
      --text-color: #1e293b;
      --text-muted: #64748b;
      --glass-effect: backdrop-filter: blur(12px);
      --transition-smooth: all 0.5s cubic-bezier(0.16, 1, 0.3, 1);
      --transition-bounce: all 0.6s cubic-bezier(0.34, 1.56, 0.64, 1);
      --transition-elastic: all 0.8s cubic-bezier(0.68, -0.6, 0.32, 1.6);
      --sidebar-width: 280px;
      --notification-count: 4;
      --cart-count: 3;
      
      /* Dark mode variables */
      --dark-bg: #0f172a;
      --dark-text: #e2e8f0;
      --dark-muted: #94a3b8;
      --dark-shadow: 0 4px 30px rgba(0, 0, 0, 0.3);
      
      /* New dropdown variables */
      --dropdown-border-radius: 16px;
      --dropdown-item-padding: 14px 20px;
      --dropdown-icon-size: 20px;
      --dropdown-divider-color: rgba(226, 232, 240, 0.3);
      --dropdown-hover-bg: rgba(241, 245, 249, 0.2);
      --dropdown-active-bg: rgba(67, 97, 238, 0.1);
    }
    
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
    }
    
    html {
      scroll-behavior: smooth;
    }

    body {
      transition: background-color 0.5s ease, color 0.5s ease;
      background-color: #f8fafc;
    }

    /* Dark mode styles */
    body.dark-mode {
      background-color: var(--dark-bg);
      color: var(--dark-text);
      
      --header-bg: rgba(15, 23, 42, 0.98);
      --header-scrolled-bg: rgba(15, 23, 42, 0.96);
      --header-shadow: var(--dark-shadow);
      --header-scrolled-shadow: 0 2px 15px rgba(0, 0, 0, 0.2);
      --text-color: var(--dark-text);
      --text-muted: var(--dark-muted);
      --dropdown-divider-color: rgba(100, 116, 139, 0.3);
      --dropdown-hover-bg: rgba(30, 41, 59, 0.3);
      --dropdown-active-bg: rgba(67, 97, 238, 0.2);
    }

    /* Header Styles with Glass Morphism */
    .header {
      position: fixed;
      top: 0;
      left: var(--sidebar-width);
      right: 0;
      height: var(--header-height);
      background: var(--header-bg);
      backdrop-filter: blur(12px);
      -webkit-backdrop-filter: blur(12px);
      box-shadow: var(--header-shadow);
      z-index: 999;
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 0 2.5rem;
      transition: var(--transition-smooth);
      will-change: transform, height, box-shadow, backdrop-filter;
    }

    /* Adjust for collapsed sidebar */
    @media (max-width: 992px) {
      .header {
        left: 80px;
      }
    }

    /* Adjust for mobile */
    @media (max-width: 768px) {
      .header {
        left: 0;
      }
    }

    .header.scrolled {
      height: var(--header-scrolled-height);
      background: var(--header-scrolled-bg);
      box-shadow: var(--header-scrolled-shadow);
    }

    /* Logo with 3D Tilt Effect */
    .logo {
      display: flex;
      align-items: center;
      gap: 0.75rem;
      text-decoration: none;
      color: var(--text-color);
      font-weight: 700;
      font-size: 1.5rem;
      letter-spacing: -0.02em;
      transition: var(--transition-smooth);
      perspective: 1000px;
    }

    .logo:hover {
      color: var(--primary-dark);
    }

    .logo-img {
      height: 2.5rem;
      width: auto;
      transition: var(--transition-elastic);
      transform-style: preserve-3d;
    }

    .logo:hover .logo-img {
      transform: rotateY(15deg) scale(1.1);
    }

    .logo-text {
      position: relative;
      background: var(--primary-gradient);
      -webkit-background-clip: text;
      background-clip: text;
      -webkit-text-fill-color: transparent;
      padding-bottom: 0.25rem;
    }
    
    .logo-text::after {
      content: '';
      position: absolute;
      bottom: 0;
      left: 0;
      width: 0;
      height: 2px;
      background: var(--primary-gradient);
      transition: width 0.4s ease-out;
    }
    
    .logo:hover .logo-text::after {
      width: 100%;
    }

    /* Navigation */
    .header-nav {
      display: flex;
      align-items: center;
      gap: 1.5rem;
    }

    /* Action Buttons with Floating Effect */
    .action-btn {
      position: relative;
      display: flex;
      align-items: center;
      justify-content: center;
      width: 2.75rem;
      height: 2.75rem;
      border-radius: 0.75rem;
      color: var(--text-muted);
      transition: var(--transition-bounce);
      background: rgba(241, 245, 249, 0.5);
      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.05);
      border: none;
      outline: none;
      cursor: pointer;
    }

    .dark-mode .action-btn {
      background: rgba(30, 41, 59, 0.5);
    }

    .action-btn:hover {
      background: rgba(241, 245, 249, 0.9);
      color: var(--primary-dark);
      transform: translateY(-3px) scale(1.05);
      box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
    }

    .dark-mode .action-btn:hover {
      background: rgba(30, 41, 59, 0.9);
    }

    .action-btn i {
      font-size: 1.375rem;
    }

    /* Badge - Modern Floating Design */
    .action-badge {
      position: absolute;
      top: -0.25rem;
      right: -0.25rem;
      min-width: 1.375rem;
      height: 1.375rem;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 0.6875rem;
      font-weight: 700;
      color: white;
      background: var(--primary-color);
      border-radius: 999px;
      border: 2px solid var(--header-bg);
      padding: 0 0.375rem;
      transform: scale(1);
      transition: var(--transition-bounce);
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .action-badge.notification {
      background: linear-gradient(135deg, #ef4444 0%, #f97316 100%);
    }

    .action-badge.cart {
      background: linear-gradient(135deg, #10b981 0%, #059669 100%);
    }

    .action-btn:hover .action-badge {
      transform: translateY(-3px) scale(1.15);
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
    }

    /* Profile Button with Floating Avatar */
    .profile-btn {
      display: flex;
      align-items: center;
      gap: 0.75rem;
      padding: 0.5rem 0.75rem 0.5rem 0.5rem;
      border-radius: 1.5rem;
      transition: var(--transition-bounce);
      background: rgba(241, 245, 249, 0.5);
      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.05);
      border: none;
      outline: none;
      cursor: pointer;
    }

    .dark-mode .profile-btn {
      background: rgba(30, 41, 59, 0.5);
    }

    .profile-btn:hover {
      background: rgba(241, 245, 249, 0.9);
      transform: translateY(-3px);
      box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
    }

    .dark-mode .profile-btn:hover {
      background: rgba(30, 41, 59, 0.9);
    }

    .profile-img {
      width: 2.5rem;
      height: 2.5rem;
      border-radius: 50%;
      object-fit: cover;
      border: 2px solid rgba(226, 232, 240, 0.8);
      transition: var(--transition-bounce);
      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
    }

    .profile-btn:hover .profile-img {
      border-color: var(--primary-dark);
      transform: scale(1.1) rotate(5deg);
      box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.2);
    }

    .profile-name {
      font-weight: 600;
      color: var(--text-color);
      font-size: 0.9375rem;
      transition: var(--transition-smooth);
    }
    
    .profile-btn:hover .profile-name {
      color: var(--primary-dark);
    }

    /* ====================== */
    /* Enhanced Dropdown Menu */
    /* ====================== */
    .dropdown {
      position: relative;
      z-index: 1000;
    }
    
    .dropdown-menu {
      position: absolute;
      right: 0;
      top: calc(100% + 12px);
      background: rgba(255, 255, 255, 0.98);
      backdrop-filter: blur(24px);
      -webkit-backdrop-filter: blur(24px);
      border-radius: var(--dropdown-border-radius);
      box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
      min-width: 320px;
      max-height: 0;
      opacity: 0;
      visibility: hidden;
      transform: translateY(10px) scale(0.95);
      transform-origin: top right;
      transition: all 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);
      z-index: 1001;
      overflow: hidden;
      border: 1px solid rgba(226, 232, 240, 0.2);
      pointer-events: none;
    }

    .dark-mode .dropdown-menu {
      background: rgba(15, 23, 42, 0.98);
      border: 1px solid rgba(30, 41, 59, 0.3);
      box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.4);
    }

    .dropdown:hover .dropdown-menu {
      opacity: 1;
      visibility: visible;
      transform: translateY(0) scale(1);
      max-height: 80vh;
      overflow-y: auto;
      pointer-events: auto;
    }

    /* Dropdown arrow */
    .dropdown-menu::before {
      content: '';
      position: absolute;
      top: -6px;
      right: 20px;
      width: 12px;
      height: 12px;
      background: rgba(255, 255, 255, 0.98);
      backdrop-filter: blur(24px);
      -webkit-backdrop-filter: blur(24px);
      transform: rotate(45deg);
      z-index: -1;
      border-top: 1px solid rgba(226, 232, 240, 0.2);
      border-left: 1px solid rgba(226, 232, 240, 0.2);
    }

    .dark-mode .dropdown-menu::before {
      background: rgba(15, 23, 42, 0.98);
      border-top: 1px solid rgba(30, 41, 59, 0.3);
      border-left: 1px solid rgba(30, 41, 59, 0.3);
    }

    /* Notification Dropdown - Enhanced */
    .notification-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 20px;
      position: sticky;
      top: 0;
      background: rgba(255, 255, 255, 0.85);
      backdrop-filter: blur(12px);
      z-index: 1;
      border-bottom: 1px solid var(--dropdown-divider-color);
    }

    .dark-mode .notification-header {
      background: rgba(15, 23, 42, 0.85);
    }

    .notification-title {
      font-size: 1.125rem;
      font-weight: 700;
      color: var(--text-color);
      letter-spacing: -0.01em;
    }

    .view-all-btn {
      display: inline-flex;
      align-items: center;
      gap: 0.25rem;
      padding: 8px 16px;
      border-radius: 999px;
      font-size: 0.8125rem;
      font-weight: 600;
      background: var(--primary-gradient);
      color: white;
      text-decoration: none;
      transition: var(--transition-bounce);
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      border: none;
      outline: none;
      cursor: pointer;
    }

    .view-all-btn:hover {
      transform: translateY(-2px) scale(1.05);
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
    }

    .notification-list {
      max-height: 400px;
      overflow-y: auto;
      scrollbar-width: thin;
      scrollbar-color: rgba(100, 116, 139, 0.3) transparent;
    }

    .notification-list::-webkit-scrollbar {
      width: 6px;
    }

    .notification-list::-webkit-scrollbar-track {
      background: transparent;
    }

    .notification-list::-webkit-scrollbar-thumb {
      background-color: rgba(100, 116, 139, 0.3);
      border-radius: 3px;
    }

    .dark-mode .notification-list::-webkit-scrollbar-thumb {
      background-color: rgba(148, 163, 184, 0.3);
    }

    .notification-item {
      display: flex;
      gap: 16px;
      padding: 16px 20px;
      transition: var(--transition-smooth);
      position: relative;
      z-index: 1;
      cursor: pointer;
    }

    .notification-item.unread {
      background: rgba(236, 253, 245, 0.3);
    }

    .dark-mode .notification-item.unread {
      background: rgba(6, 78, 59, 0.2);
    }

    .notification-item:not(:last-child)::after {
      content: '';
      position: absolute;
      bottom: 0;
      left: 20px;
      right: 20px;
      height: 1px;
      background: var(--dropdown-divider-color);
    }

    .notification-item:hover {
      background: var(--dropdown-hover-bg);
      transform: translateX(5px);
    }

    .notification-icon {
      font-size: 1.25rem;
      margin-top: 0.125rem;
      flex-shrink: 0;
      background: rgba(241, 245, 249, 0.7);
      width: 2.5rem;
      height: 2.5rem;
      display: flex;
      align-items: center;
      justify-content: center;
      border-radius: 0.75rem;
      transition: var(--transition-smooth);
    }

    .dark-mode .notification-icon {
      background: rgba(30, 41, 59, 0.7);
    }
    
    .notification-item:hover .notification-icon {
      transform: scale(1.1);
      background: rgba(236, 253, 245, 0.7);
    }

    .notification-content {
      flex: 1;
      min-width: 0;
    }

    .notification-title {
      font-size: 0.9375rem;
      font-weight: 600;
      color: var(--text-color);
      margin-bottom: 6px;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }

    .notification-text {
      font-size: 0.875rem;
      color: var(--text-muted);
      line-height: 1.5;
      margin-bottom: 6px;
      display: -webkit-box;
      -webkit-line-clamp: 2;
      -webkit-box-orient: vertical;
      overflow: hidden;
    }

    .notification-time {
      font-size: 0.75rem;
      color: #94a3b8;
      display: flex;
      align-items: center;
      gap: 4px;
    }
    
    .notification-time::before {
      content: '';
      display: inline-block;
      width: 4px;
      height: 4px;
      background: #94a3b8;
      border-radius: 50%;
    }

    .notification-actions {
      display: flex;
      gap: 8px;
      margin-top: 8px;
    }

    .notification-action-btn {
      padding: 4px 8px;
      font-size: 0.75rem;
      border-radius: 4px;
      background: rgba(241, 245, 249, 0.7);
      border: none;
      cursor: pointer;
      transition: var(--transition-smooth);
    }

    .notification-action-btn:hover {
      background: rgba(226, 232, 240, 0.9);
    }

    .dark-mode .notification-action-btn {
      background: rgba(30, 41, 59, 0.7);
    }

    .dark-mode .notification-action-btn:hover {
      background: rgba(51, 65, 85, 0.9);
    }

    /* Profile Dropdown - Enhanced */
    .profile-dropdown-header {
      padding: 24px;
      text-align: center;
      position: relative;
      overflow: hidden;
      background: linear-gradient(135deg, rgba(67, 97, 238, 0.1) 0%, rgba(58, 12, 163, 0.1) 100%);
    }
    
    .profile-dropdown-header::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      height: 4px;
      background: var(--primary-gradient);
    }

    .profile-dropdown-img {
      width: 80px;
      height: 80px;
      border-radius: 50%;
      object-fit: cover;
      border: 3px solid rgba(226, 232, 240, 0.8);
      margin-bottom: 16px;
      transition: var(--transition-smooth);
      box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
    }
    
    .dropdown:hover .profile-dropdown-img {
      transform: scale(1.05) rotate(5deg);
    }

    .profile-dropdown-name {
      font-size: 1.25rem;
      font-weight: 700;
      margin-bottom: 4px;
      letter-spacing: -0.01em;
      color: var(--text-color);
    }

    .profile-dropdown-role {
      font-size: 0.875rem;
      color: var(--text-muted);
      background: rgba(241, 245, 249, 0.7);
      display: inline-block;
      padding: 4px 12px;
      border-radius: 999px;
    }

    .dark-mode .profile-dropdown-role {
      background: rgba(30, 41, 59, 0.7);
    }

    .dropdown-list {
      padding: 8px 0;
    }

    .dropdown-item {
      display: flex;
      align-items: center;
      gap: 16px;
      padding: var(--dropdown-item-padding);
      text-decoration: none;
      color: var(--text-muted);
      transition: var(--transition-smooth);
      position: relative;
      overflow: hidden;
      cursor: pointer;
    }

    .dropdown-item i {
      font-size: var(--dropdown-icon-size);
      width: 24px;
      text-align: center;
      transition: var(--transition-smooth);
    }

    .dropdown-item span {
      flex: 1;
      transition: var(--transition-smooth);
    }

    .dropdown-item .badge {
      font-size: 0.75rem;
      padding: 2px 6px;
      border-radius: 999px;
      background: rgba(239, 68, 68, 0.1);
      color: #ef4444;
    }

    .dropdown-item:hover {
      background: var(--dropdown-hover-bg);
      color: var(--primary-dark);
      padding-left: 24px;
    }

    .dropdown-item:hover i {
      transform: scale(1.2);
      color: var(--primary-dark);
    }

    .dropdown-item.active {
      background: var(--dropdown-active-bg);
      color: var(--primary-dark);
    }

    .dropdown-item.active i {
      color: var(--primary-dark);
    }

    .dropdown-divider {
      height: 1px;
      background: var(--dropdown-divider-color);
      margin: 8px 0;
    }

    /* Dark Mode Toggle Button */
    .dark-mode-toggle {
      position: relative;
      overflow: hidden;
    }

    .dark-mode-toggle i {
      transition: transform 0.5s ease, opacity 0.3s ease;
    }

    .dark-mode-toggle .bi-moon {
      position: absolute;
      opacity: 0;
      transform: rotate(90deg);
    }

    .dark-mode-toggle .bi-sun {
      opacity: 1;
      transform: rotate(0deg);
    }

    body.dark-mode .dark-mode-toggle .bi-moon {
      opacity: 1;
      transform: rotate(0deg);
    }

    body.dark-mode .dark-mode-toggle .bi-sun {
      opacity: 0;
      transform: rotate(-90deg);
    }

    /* Responsive Design */
    @media (max-width: 992px) {
      .header {
        padding: 0 1.5rem;
        --header-height: 80px;
        --header-scrolled-height: 65px;
      }
      
      .logo-text {
        display: none;
      }
      
      .profile-name {
        display: none;
      }
      
      .action-btn {
        width: 2.5rem;
        height: 2.5rem;
      }
      
      .profile-btn {
        padding: 0.5rem;
      }
      
      .dropdown-menu {
        min-width: 280px;
        right: -10px;
      }
    }

    @media (max-width: 576px) {
      .dropdown-menu {
        width: calc(100vw - 40px);
        right: 20px;
        left: auto;
      }
      
      .dropdown-menu::before {
        right: 30px;
      }
    }

    /* Animation Keyframes - Enhanced */
    @keyframes pulse {
      0% { transform: scale(1); }
      50% { transform: scale(1.15); }
      100% { transform: scale(1); }
    }
    
    @keyframes float {
      0% { transform: translateY(0px); }
      50% { transform: translateY(-5px); }
      100% { transform: translateY(0px); }
    }
    
    @keyframes tilt {
      0% { transform: rotate(0deg); }
      25% { transform: rotate(5deg); }
      75% { transform: rotate(-5deg); }
      100% { transform: rotate(0deg); }
    }

    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(10px); }
      to { opacity: 1; transform: translateY(0); }
    }

    @keyframes glow {
      0% { box-shadow: 0 0 0 0 rgba(67, 97, 238, 0.4); }
      70% { box-shadow: 0 0 0 10px rgba(67, 97, 238, 0); }
      100% { box-shadow: 0 0 0 0 rgba(67, 97, 238, 0); }
    }

    @keyframes shimmer {
      100% {
        transform: translateX(100%);
      }
    }

    @keyframes ripple {
      to {
        transform: scale(4);
        opacity: 0;
      }
    }

    @keyframes slideIn {
      from { transform: translateX(100%); opacity: 0; }
      to { transform: translateX(0); opacity: 1; }
    }

    @keyframes rotate {
      from { transform: rotate(0deg); }
      to { transform: rotate(360deg); }
    }

    @keyframes bounce {
      0%, 100% { transform: translateY(0); }
      50% { transform: translateY(-8px); }
    }

    @keyframes shake {
      0%, 100% { transform: translateX(0); }
      20%, 60% { transform: translateX(-5px); }
      40%, 80% { transform: translateX(5px); }
    }

    @keyframes wave {
      0% { transform: rotate(0deg); }
      10% { transform: rotate(14deg); }
      20% { transform: rotate(-8deg); }
      30% { transform: rotate(14deg); }
      40% { transform: rotate(-4deg); }
      50% { transform: rotate(10deg); }
      60% { transform: rotate(0deg); }
      100% { transform: rotate(0deg); }
    }

    .pulse {
      animation: pulse 1.5s infinite;
    }
    
    .float {
      animation: float 3s ease-in-out infinite;
    }
    
    .tilt {
      animation: tilt 6s ease-in-out infinite;
    }

    .fade-in {
      animation: fadeIn 0.3s ease-out forwards;
    }

    .glow {
      animation: glow 1.5s infinite;
    }

    .rotate {
      animation: rotate 2s linear infinite;
    }

    .bounce {
      animation: bounce 0.8s infinite;
    }

    .shake {
      animation: shake 0.5s;
    }

    .wave {
      animation: wave 1.5s ease infinite;
      transform-origin: 70% 70%;
      display: inline-block;
    }

    /* Ripple effect */
    .ripple-effect {
      position: absolute;
      border-radius: 50%;
      background: rgba(255, 255, 255, 0.7);
      transform: scale(0);
      animation: ripple 0.6s linear;
      pointer-events: none;
    }

    .dark-mode .ripple-effect {
      background: rgba(67, 97, 238, 0.4);
    }

    /* Main content styles to prevent overlap */
    main {
      margin-top: var(--header-height);
      margin-left: var(--sidebar-width);
      padding: 2rem;
      min-height: calc(100vh - var(--header-height));
      transition: var(--transition-smooth);
    }

    /* Adjust for collapsed sidebar */
    @media (max-width: 992px) {
      main {
        margin-left: 80px;
      }
    }

    /* Adjust for mobile */
    @media (max-width: 768px) {
      main {
        margin-left: 0;
      }
    }

    /* Custom scrollbar for dropdowns */
    .dropdown-menu::-webkit-scrollbar {
      width: 6px;
    }

    .dropdown-menu::-webkit-scrollbar-track {
      background: transparent;
    }

    .dropdown-menu::-webkit-scrollbar-thumb {
      background-color: rgba(100, 116, 139, 0.3);
      border-radius: 3px;
    }

    .dark-mode .dropdown-menu::-webkit-scrollbar-thumb {
      background-color: rgba(148, 163, 184, 0.3);
    }

    /* Loading spinner */
    .spinner {
      width: 24px;
      height: 24px;
      border: 3px solid rgba(67, 97, 238, 0.2);
      border-top-color: var(--primary-color);
      border-radius: 50%;
      animation: rotate 1s linear infinite;
    }

    /* Tooltip styles */
    .tooltip {
      position: absolute;
      background: var(--text-color);
      color: white;
      padding: 6px 12px;
      border-radius: 6px;
      font-size: 0.875rem;
      pointer-events: none;
      opacity: 0;
      transition: opacity 0.2s;
      z-index: 1002;
      white-space: nowrap;
    }

    .tooltip::after {
      content: '';
      position: absolute;
      top: 100%;
      left: 50%;
      margin-left: -5px;
      border-width: 5px;
      border-style: solid;
      border-color: var(--text-color) transparent transparent transparent;
    }

    /* Status indicators */
    .status-indicator {
      display: inline-block;
      width: 10px;
      height: 10px;
      border-radius: 50%;
      margin-right: 6px;
    }

    .status-online {
      background: #10b981;
      box-shadow: 0 0 0 2px rgba(16, 185, 129, 0.3);
    }

    .status-offline {
      background: #64748b;
      box-shadow: 0 0 0 2px rgba(100, 116, 139, 0.3);
    }

    .status-busy {
      background: #ef4444;
      box-shadow: 0 0 0 2px rgba(239, 68, 68, 0.3);
    }

    .status-away {
      background: #f59e0b;
      box-shadow: 0 0 0 2px rgba(245, 158, 11, 0.3);
    }

    /* Progress bar */
    .progress-bar {
      height: 4px;
      background: rgba(226, 232, 240, 0.5);
      border-radius: 2px;
      overflow: hidden;
      margin: 8px 0;
    }

    .progress-fill {
      height: 100%;
      background: var(--primary-gradient);
      width: 0;
      transition: width 0.6s ease;
    }

    /* Avatar group */
    .avatar-group {
      display: flex;
      align-items: center;
    }

    .avatar-group .profile-img {
      border: 2px solid var(--header-bg);
      margin-left: -10px;
    }

    .avatar-group .profile-img:first-child {
      margin-left: 0;
    }

    /* New dropdown features */
    .dropdown-search {
      padding: 12px 16px;
      position: relative;
    }

    .dropdown-search input {
      width: 100%;
      padding: 8px 12px;
      border-radius: 8px;
      border: 1px solid var(--dropdown-divider-color);
      background: rgba(241, 245, 249, 0.5);
      color: var(--text-color);
      outline: none;
      transition: var(--transition-smooth);
    }

    .dark-mode .dropdown-search input {
      background: rgba(30, 41, 59, 0.5);
    }

    .dropdown-search input:focus {
      border-color: var(--primary-color);
      box-shadow: 0 0 0 2px rgba(67, 97, 238, 0.2);
    }

    .dropdown-search i {
      position: absolute;
      right: 28px;
      top: 50%;
      transform: translateY(-50%);
      color: var(--text-muted);
    }

    .dropdown-footer {
      padding: 12px 16px;
      text-align: center;
      font-size: 0.875rem;
      color: var(--text-muted);
      border-top: 1px solid var(--dropdown-divider-color);
    }

    /* Context menu */
    .context-menu {
      position: absolute;
      background: var(--header-bg);
      backdrop-filter: blur(12px);
      border-radius: 8px;
      box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
      z-index: 1003;
      opacity: 0;
      visibility: hidden;
      transform: scale(0.95);
      transform-origin: top left;
      transition: var(--transition-smooth);
      min-width: 200px;
      overflow: hidden;
    }

    .context-menu.visible {
      opacity: 1;
      visibility: visible;
      transform: scale(1);
    }

    .context-menu-item {
      padding: 10px 16px;
      cursor: pointer;
      transition: var(--transition-smooth);
      display: flex;
      align-items: center;
      gap: 10px;
    }

    .context-menu-item:hover {
      background: var(--dropdown-hover-bg);
    }

    .context-menu-item i {
      width: 20px;
      text-align: center;
    }

    .context-menu-divider {
      height: 1px;
      background: var(--dropdown-divider-color);
      margin: 4px 0;
    }
  </style>
  <!-- Bootstrap Icons -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
  <!-- Inter Font -->
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
  <!-- Font Awesome for additional icons -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
</head>
<body>
  <!-- Premium Header Component -->
  <header class="header">
    <a href="/dashboard" class="logo">
      <img src="/logo/site_logo.png" alt="ChainCore Logo" class="logo-img float">
      <span class="logo-text">ChainCore</span>
    </a>
    
    <nav class="header-nav">
      <!-- Dark Mode Toggle -->
      <button class="action-btn dark-mode-toggle" aria-label="Toggle dark mode">
        <i class="bi bi-sun"></i>
        <i class="bi bi-moon"></i>
      </button>
      
      <!-- Notifications -->
      <div class="dropdown">
        <button class="action-btn notification-btn" aria-label="Notifications">
          <i class="bi bi-bell"></i>
          <span class="action-badge notification pulse">4</span>
        </button>
        
        <div class="dropdown-menu notification-dropdown">
          <div class="notification-header">
            <h3 class="notification-title">Notifications</h3>
            <a href="/notifications" class="view-all-btn">
              View All
              <i class="bi bi-arrow-right"></i>
            </a>
          </div>
          
          <div class="notification-list">
            <div class="notification-item unread fade-in" style="animation-delay: 0.1s">
              <div class="notification-icon text-warning">
                <i class="bi bi-exclamation-circle"></i>
              </div>
              <div class="notification-content">
                <h4 class="notification-title">System Alert</h4>
                <p class="notification-text">Server maintenance scheduled for tonight at 2:00 AM. Please save your work before this time.</p>
                <p class="notification-time">30 min. ago</p>
                <div class="notification-actions">
                  <button class="notification-action-btn">Dismiss</button>
                  <button class="notification-action-btn">Remind Later</button>
                </div>
              </div>
            </div>
            
            <div class="notification-item unread fade-in" style="animation-delay: 0.2s">
              <div class="notification-icon text-danger">
                <i class="bi bi-x-circle"></i>
              </div>
              <div class="notification-content">
                <h4 class="notification-title">Failed Login Attempt</h4>
                <p class="notification-text">Unsuccessful login attempt from unknown IP address (192.168.1.45) detected.</p>
                <p class="notification-time">1 hr. ago</p>
                <div class="notification-actions">
                  <button class="notification-action-btn">Dismiss</button>
                  <button class="notification-action-btn">View Details</button>
                </div>
              </div>
            </div>
            
            <div class="notification-item fade-in" style="animation-delay: 0.3s">
              <div class="notification-icon text-success">
                <i class="bi bi-check-circle"></i>
              </div>
              <div class="notification-content">
                <h4 class="notification-title">Backup Completed</h4>
                <p class="notification-text">Database backup was completed successfully. Total size: 2.4GB</p>
                <p class="notification-time">2 hrs. ago</p>
              </div>
            </div>
            
            <div class="notification-item fade-in" style="animation-delay: 0.4s">
              <div class="notification-icon text-primary">
                <i class="bi bi-person-plus"></i>
              </div>
              <div class="notification-content">
                <h4 class="notification-title">New Team Member</h4>
                <p class="notification-text">Sarah Johnson has joined your team as a Frontend Developer.</p>
                <p class="notification-time">5 hrs. ago</p>
              </div>
            </div>
            
            <div class="notification-item fade-in" style="animation-delay: 0.5s">
              <div class="notification-icon text-info">
                <i class="bi bi-cloud-arrow-down"></i>
              </div>
              <div class="notification-content">
                <h4 class="notification-title">New Update Available</h4>
                <p class="notification-text">Version 2.3.0 is ready to download. Includes performance improvements.</p>
                <p class="notification-time">1 day ago</p>
              </div>
            </div>
          </div>
          
          <div class="dropdown-footer">
            <span>You have 2 unread notifications</span>
          </div>
        </div>
      </div>
      
      <!-- Shopping Cart -->
      <a href="/shopping" class="action-btn cart-btn" aria-label="Shopping cart">
        <i class="bi bi-cart3"></i>
        <span class="action-badge cart pulse">3</span>
      </a>
      
      <!-- Messages Dropdown -->
      <div class="dropdown">
        <button class="action-btn messages-btn" aria-label="Messages">
          <i class="bi bi-chat-left-text"></i>
          <span class="action-badge message pulse">2</span>
        </button>
        
        <div class="dropdown-menu messages-dropdown">
          <div class="notification-header">
            <h3 class="notification-title">Messages</h3>
            <a href="/messages" class="view-all-btn">
              View All
              <i class="bi bi-arrow-right"></i>
            </a>
          </div>
          
          <div class="dropdown-search">
            <input type="text" placeholder="Search messages...">
            <i class="bi bi-search"></i>
          </div>
          
          <div class="notification-list">
            <a href="/messages/1" class="dropdown-item fade-in" style="animation-delay: 0.1s">
              <img src="https://randomuser.me/api/portraits/women/44.jpg" alt="User" class="profile-img" width="40" height="40">
              <div>
                <h4>Sarah Johnson <span class="status-indicator status-online"></span></h4>
                <p class="notification-text">Hey, can you review the latest design...</p>
                <p class="notification-time">10 min ago</p>
              </div>
              <span class="badge">2</span>
            </a>
            
            <a href="/messages/2" class="dropdown-item fade-in" style="animation-delay: 0.15s">
              <img src="https://randomuser.me/api/portraits/men/32.jpg" alt="User" class="profile-img" width="40" height="40">
              <div>
                <h4>Michael Chen <span class="status-indicator status-away"></span></h4>
                <p class="notification-text">The API documentation is ready for...</p>
                <p class="notification-time">1 hr ago</p>
              </div>
            </a>
            
            <div class="dropdown-divider"></div>
            
            <a href="/messages/3" class="dropdown-item fade-in" style="animation-delay: 0.2s">
              <img src="https://randomuser.me/api/portraits/women/68.jpg" alt="User" class="profile-img" width="40" height="40">
              <div>
                <h4>Emma Wilson <span class="status-indicator status-offline"></span></h4>
                <p class="notification-text">Meeting rescheduled to tomorrow at...</p>
                <p class="notification-time">3 hrs ago</p>
              </div>
            </a>
          </div>
          
          <div class="dropdown-footer">
            <button class="view-all-btn" style="width: 100%">
              <i class="bi bi-plus"></i> New Message
            </button>
          </div>
        </div>
      </div>
      
      <!-- User Profile -->
      <div class="dropdown">
        <button class="profile-btn profile-dropdown-btn">
          <img src="<%=user_image %>" alt="Profile" class="profile-img">
          <span class="profile-name">Admin</span>
        </button>
        
        <div class="dropdown-menu profile-dropdown">
          <div class="profile-dropdown-header">
            <img src="<%=user_image %>" alt="Profile" class="profile-dropdown-img tilt">
            <h3 class="profile-dropdown-name">Admin User</h3>
            <p class="profile-dropdown-role">Administrator</p>
            
            <div class="progress-bar">
              <div class="progress-fill" style="width: 75%"></div>
            </div>
            <p class="notification-time">Profile completeness: 75%</p>
          </div>
          
          <div class="dropdown-list">
            <a href="/admininfo" class="dropdown-item fade-in" style="animation-delay: 0.1s">
              <i class="bi bi-person"></i>
              <span>My Profile</span>
            </a>
            
            <a href="/change_pass_page" class="dropdown-item fade-in" style="animation-delay: 0.15s">
              <i class="bi bi-shield-lock"></i>
              <span>Change Password</span>
            </a>
            
            <a href="/settings" class="dropdown-item fade-in" style="animation-delay: 0.2s">
              <i class="bi bi-gear"></i>
              <span>Settings</span>
            </a>
            
            <a href="/team" class="dropdown-item fade-in" style="animation-delay: 0.25s">
              <i class="bi bi-people"></i>
              <span>Team Members</span>
            </a>
            
            <div class="dropdown-divider"></div>
            
            <a href="/help" class="dropdown-item fade-in" style="animation-delay: 0.3s">
              <i class="bi bi-question-circle"></i>
              <span>Help Center</span>
            </a>
            
            <a href="/feedback" class="dropdown-item fade-in" style="animation-delay: 0.35s">
              <i class="bi bi-chat-square-text"></i>
              <span>Send Feedback</span>
            </a>
            
            <div class="dropdown-divider"></div>
            
            <a href="/logout" class="dropdown-item fade-in" style="animation-delay: 0.4s">
              <i class="bi bi-box-arrow-right"></i>
              <span>Sign Out</span>
            </a>
          </div>
        </div>
      </div>
    </nav>
  </header>

  <!-- Context Menu -->
  <div class="context-menu" id="contextMenu">
    <div class="context-menu-item">
      <i class="bi bi-eye"></i>
      <span>View Details</span>
    </div>
    <div class="context-menu-item">
      <i class="bi bi-pencil"></i>
      <span>Edit</span>
    </div>
    <div class="context-menu-divider"></div>
    <div class="context-menu-item">
      <i class="bi bi-files"></i>
      <span>Copy</span>
    </div>
    <div class="context-menu-item">
      <i class="bi bi-trash"></i>
      <span>Delete</span>
    </div>
  </div>

  <script>
    // Enhanced Header scroll effect with parallax
    window.addEventListener('scroll', function() {
      const header = document.querySelector('.header');
      const scrollPosition = window.scrollY;
      
      header.classList.toggle('scrolled', scrollPosition > 10);
      
      // Parallax effect on logo
      const logo = document.querySelector('.logo-img');
      if (logo) {
        logo.style.transform = `translateY(${Math.min(scrollPosition * 0.2, 10)}px) rotateY(${Math.min(scrollPosition * 0.5, 15)}deg)`;
      }
    });
    
    // Dynamic notification count with enhanced animation
    setInterval(function() {
      const badge = document.querySelector('.action-badge.notification');
      if (Math.random() > 0.7) {
        const count = parseInt(badge.textContent);
        const newCount = Math.max(0, Math.min(99, count + (Math.random() > 0.5 ? 1 : -1)));
        
        // Add animation class
        badge.classList.add('pulse');
        
        // Change color based on count
        if (newCount > 5) {
          badge.style.background = 'linear-gradient(135deg, #ef4444 0%, #f97316 100%)';
        } else if (newCount > 2) {
          badge.style.background = 'linear-gradient(135deg, #f59e0b 0%, #f97316 100%)';
        } else {
          badge.style.background = 'var(--primary-gradient)';
        }
        
        setTimeout(() => {
          badge.textContent = newCount;
          setTimeout(() => badge.classList.remove('pulse'), 500);
        }, 300);
      }
    }, 8000);
    
    // Enhanced cart badge animation on hover
    const cartBtn = document.querySelector('.cart-btn');
    if (cartBtn) {
      cartBtn.addEventListener('mouseenter', function() {
        const badge = this.querySelector('.action-badge');
        badge.classList.add('pulse');
        
        // Add floating items animation
        const cartIcon = this.querySelector('i');
        cartIcon.style.transform = 'translateY(-3px) rotate(-10deg)';
        
        // Add glow effect
        this.classList.add('glow');
      });
      
      cartBtn.addEventListener('mouseleave', function() {
        const badge = this.querySelector('.action-badge');
        badge.classList.remove('pulse');
        
        const cartIcon = this.querySelector('i');
        cartIcon.style.transform = '';
        
        // Remove glow effect
        this.classList.remove('glow');
      });
    }
    
    // Enhanced dropdown transitions with delay and staggered animations
    document.querySelectorAll('.dropdown').forEach(dropdown => {
      let timeout;
      let isAnimating = false;
      
      dropdown.addEventListener('mouseenter', function() {
        clearTimeout(timeout);
        if (isAnimating) return;
        
        isAnimating = true;
        const menu = this.querySelector('.dropdown-menu');
        menu.style.display = 'block';
        menu.style.opacity = '0';
        menu.style.transform = 'translateY(10px) scale(0.95)';
        
        // Add loading spinner for messages dropdown
        if (this.querySelector('.messages-dropdown')) {
          const list = this.querySelector('.notification-list');
          list.innerHTML = `<div style="padding: 20px; text-align: center;"><div class="spinner"></div></div>`;
          
          // Simulate loading messages
          setTimeout(() => {
            if (list) {
              list.innerHTML = `
                <a href="/messages/1" class="dropdown-item">
                  <img src="https://randomuser.me/api/portraits/women/44.jpg" alt="User" class="profile-img" width="40" height="40">
                  <div>
                    <h4>Sarah Johnson <span class="status-indicator status-online"></span></h4>
                    <p class="notification-text">Hey, can you review the latest design...</p>
                    <p class="notification-time">10 min ago</p>
                  </div>
                  <span class="badge">2</span>
                </a>
                <a href="/messages/2" class="dropdown-item">
                  <img src="https://randomuser.me/api/portraits/men/32.jpg" alt="User" class="profile-img" width="40" height="40">
                  <div>
                    <h4>Michael Chen <span class="status-indicator status-away"></span></h4>
                    <p class="notification-text">The API documentation is ready for...</p>
                    <p class="notification-time">1 hr ago</p>
                  </div>
                </a>
                <div class="dropdown-divider"></div>
                <a href="/messages/3" class="dropdown-item">
                  <img src="https://randomuser.me/api/portraits/women/68.jpg" alt="User" class="profile-img" width="40" height="40">
                  <div>
                    <h4>Emma Wilson <span class="status-indicator status-offline"></span></h4>
                    <p class="notification-text">Meeting rescheduled to tomorrow at...</p>
                    <p class="notification-time">3 hrs ago</p>
                  </div>
                </a>
              `;
            }
          }, 800);
        }
        
        setTimeout(() => {
          menu.style.opacity = '1';
          menu.style.transform = 'translateY(0) scale(1)';
          
          // Animate dropdown items sequentially
          const items = menu.querySelectorAll('.fade-in');
          items.forEach((item, index) => {
            item.style.animationDelay = `${index * 0.05}s`;
          });
          
          isAnimating = false;
        }, 10);
      });
      
      dropdown.addEventListener('mouseleave', function() {
        const menu = this.querySelector('.dropdown-menu');
        menu.style.opacity = '0';
        menu.style.transform = 'translateY(10px) scale(0.95)';
        
        timeout = setTimeout(() => {
          menu.style.display = 'none';
        }, 300);
      });
    });
    
    // Add ripple effect to buttons
    document.querySelectorAll('.action-btn, .profile-btn, .view-all-btn, .dropdown-item, .notification-action-btn').forEach(button => {
      button.addEventListener('click', function(e) {
        // Remove any existing ripple
        const existingRipple = this.querySelector('.ripple-effect');
        if (existingRipple) {
          existingRipple.remove();
        }
        
        const rect = this.getBoundingClientRect();
        const x = e.clientX - rect.left;
        const y = e.clientY - rect.top;
        
        const ripple = document.createElement('span');
        ripple.className = 'ripple-effect';
        ripple.style.left = `${x}px`;
        ripple.style.top = `${y}px`;
        
        this.appendChild(ripple);
        
        setTimeout(() => {
          ripple.remove();
        }, 600);
      });
    });
    
    // Add subtle hover effect to all interactive elements
    document.querySelectorAll('a, button, .dropdown-item, .notification-item').forEach(element => {
      element.addEventListener('mouseenter', function() {
        this.style.transform = 'translateY(-1px)';
      });
      
      element.addEventListener('mouseleave', function() {
        this.style.transform = '';
      });
    });
    
    // Initialize animations when page loads
    document.addEventListener('DOMContentLoaded', function() {
      // Add initial animation to header
      const header = document.querySelector('.header');
      if (header) {
        header.style.opacity = '0';
        header.style.transform = 'translateY(-20px)';
        
        setTimeout(() => {
          header.style.transition = 'opacity 0.5s ease-out, transform 0.5s cubic-bezier(0.34, 1.56, 0.64, 1)';
          header.style.opacity = '1';
          header.style.transform = 'translateY(0)';
        }, 100);
      }
      
      // Add animation to logo text
      const logoText = document.querySelector('.logo-text');
      if (logoText) {
        setTimeout(() => {
          logoText.style.animation = 'fadeIn 0.8s ease-out forwards';
        }, 300);
      }
      
      // Initialize profile completeness progress
      const progressFill = document.querySelector('.progress-fill');
      if (progressFill) {
        setTimeout(() => {
          progressFill.style.width = '75%';
        }, 500);
      }
    });

    // Enhanced Dark Mode Toggle
    document.addEventListener('DOMContentLoaded', function() {
      const darkModeToggle = document.querySelector('.dark-mode-toggle');
      
      // Check for saved preference or system preference
      const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
      const savedMode = localStorage.getItem('darkMode');
      
      if (savedMode === 'true' || (savedMode === null && prefersDark)) {
        document.body.classList.add('dark-mode');
      }
      
      // Set initial icon state
      updateDarkModeIcon();
      
      // Toggle dark mode
      darkModeToggle.addEventListener('click', function() {
        document.body.classList.toggle('dark-mode');
        localStorage.setItem('darkMode', document.body.classList.contains('dark-mode'));
        updateDarkModeIcon();
        
        // Add animation to toggle button
        this.classList.add('rotate');
        setTimeout(() => {
          this.classList.remove('rotate');
        }, 500);
      });
      
      function updateDarkModeIcon() {
        const sunIcon = darkModeToggle.querySelector('.bi-sun');
        const moonIcon = darkModeToggle.querySelector('.bi-moon');
        
        if (document.body.classList.contains('dark-mode')) {
          sunIcon.style.opacity = '0';
          sunIcon.style.transform = 'rotate(-90deg)';
          moonIcon.style.opacity = '1';
          moonIcon.style.transform = 'rotate(0deg)';
        } else {
          sunIcon.style.opacity = '1';
          sunIcon.style.transform = 'rotate(0deg)';
          moonIcon.style.opacity = '0';
          moonIcon.style.transform = 'rotate(90deg)';
        }
      }
      
      // Listen for system color scheme changes
      window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', e => {
        if (localStorage.getItem('darkMode') === null) {
          if (e.matches) {
            document.body.classList.add('dark-mode');
          } else {
            document.body.classList.remove('dark-mode');
          }
          updateDarkModeIcon();
        }
      });
    });
    
    // Context menu functionality
    document.addEventListener('DOMContentLoaded', function() {
      const contextMenu = document.getElementById('contextMenu');
      
      document.addEventListener('contextmenu', function(e) {
        e.preventDefault();
        
        // Position the context menu
        let x = e.clientX;
        let y = e.clientY;
        
        // Adjust position if near window edges
        const windowWidth = window.innerWidth;
        const windowHeight = window.innerHeight;
        const menuWidth = contextMenu.offsetWidth;
        const menuHeight = contextMenu.offsetHeight;
        
        if (x + menuWidth > windowWidth) {
          x = windowWidth - menuWidth - 5;
        }
        
        if (y + menuHeight > windowHeight) {
          y = windowHeight - menuHeight - 5;
        }
        
        contextMenu.style.left = `${x}px`;
        contextMenu.style.top = `${y}px`;
        contextMenu.classList.add('visible');
      });
      
      // Close context menu when clicking elsewhere
      document.addEventListener('click', function() {
        contextMenu.classList.remove('visible');
      });
      
      // Prevent closing when clicking inside menu
      contextMenu.addEventListener('click', function(e) {
        e.stopPropagation();
      });
    });
    
    // Notification item click handler
    document.querySelectorAll('.notification-item').forEach(item => {
      item.addEventListener('click', function(e) {
        if (!e.target.classList.contains('notification-action-btn')) {
          // Mark as read
          this.classList.remove('unread');
          
          // Show tooltip
          const tooltip = document.createElement('div');
          tooltip.className = 'tooltip';
          tooltip.textContent = 'Notification marked as read';
          document.body.appendChild(tooltip);
          
          // Position tooltip
          const rect = this.getBoundingClientRect();
          tooltip.style.left = `${rect.left + rect.width / 2 - tooltip.offsetWidth / 2}px`;
          tooltip.style.top = `${rect.top - tooltip.offsetHeight - 10}px`;
          tooltip.style.opacity = '1';
          
          // Remove tooltip after delay
          setTimeout(() => {
            tooltip.style.opacity = '0';
            setTimeout(() => tooltip.remove(), 200);
          }, 2000);
        }
      });
    });
    
    // Profile dropdown item click handler
    document.querySelectorAll('.profile-dropdown .dropdown-item').forEach(item => {
      item.addEventListener('click', function() {
        // Add active class and remove from siblings
        this.classList.add('active');
        const siblings = Array.from(this.parentNode.children).filter(child => child !== this);
        siblings.forEach(sibling => sibling.classList.remove('active'));
        
        // Add loading effect
        const icon = this.querySelector('i');
        if (icon) {
          icon.classList.add('rotate');
          setTimeout(() => icon.classList.remove('rotate'), 1000);
        }
      });
    });
    
    // Search functionality for messages dropdown
    document.querySelectorAll('.dropdown-search input').forEach(input => {
      input.addEventListener('input', function() {
        const searchTerm = this.value.toLowerCase();
        const items = this.closest('.dropdown-menu').querySelectorAll('.dropdown-item');
        
        items.forEach(item => {
          const text = item.textContent.toLowerCase();
          if (text.includes(searchTerm)) {
            item.style.display = 'flex';
          } else {
            item.style.display = 'none';
          }
        });
      });
    });
    
    // Avatar hover effect
    document.querySelectorAll('.profile-img').forEach(avatar => {
      avatar.addEventListener('mouseenter', function() {
        this.classList.add('wave');
      });
      
      avatar.addEventListener('mouseleave', function() {
        this.classList.remove('wave');
      });
    });
    
    // Simulate unread notifications
    setTimeout(() => {
      const notificationItems = document.querySelectorAll('.notification-item.unread');
      if (notificationItems.length > 0) {
        notificationItems[0].querySelector('.notification-icon').classList.add('shake');
        setTimeout(() => {
          notificationItems[0].querySelector('.notification-icon').classList.remove('shake');
        }, 500);
      }
    }, 3000);
    
    // Simulate new message arrival
    setInterval(() => {
      if (Math.random() > 0.7) {
        const messagesBtn = document.querySelector('.messages-btn');
        if (messagesBtn) {
          messagesBtn.classList.add('shake');
          setTimeout(() => messagesBtn.classList.remove('shake'), 500);
          
          const badge = messagesBtn.querySelector('.action-badge');
          if (badge) {
            const count = parseInt(badge.textContent) + 1;
            badge.textContent = count;
            badge.classList.add('pulse');
            setTimeout(() => badge.classList.remove('pulse'), 1000);
          }
        }
      }
    }, 15000);
  </script>
</body>
</html>